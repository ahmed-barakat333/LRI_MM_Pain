# set working directory
setwd("~/Documents/MM_Pain_Network/PC")
####################### Import packages and functions
library(readr)
library(vsn)
library(limma)
library(progeny)
library(dorothea)
library(tibble)
library(tidyr)
library(dplyr)
library(ggplot2)
library(pheatmap)
library(reshape)
library(gridExtra)
library(grid)
library(cowplot)
library(ggrepel)
library(hexbin)
library(visNetwork)
library(CARNIVAL)
library(OmnipathR)
library(scales)
library(data.table)
source("scripts/support_functions.R")
source("scripts/assignPROGENyScores.r")
source("scripts/generateTFList.r")
source("scripts/carnival_visNetwork.r")
source("scripts/support_enrichment.r")
source("scripts/support_networks.r")
#read CARNIVAL results
carnival_result = readRDS("results/carnival_result.rds")
#read CARNIVAL results
carnival_result = readRDS("results/pc_carnival_result.rds")
carnival_sample_resolution = readRDS("results/carnival_sample_resolution.rds")
pkn = read_tsv("results/omnipath_carnival.tsv")
# Load pathways
pathways = gmt_to_csv("c2.cp.v7.1.symbols.gmt")
# Load pathways
pathways = gmt_to_csv("data/c2.cp.v7.1.symbols.gmt")
# Extract nodes and background
nodes_carnival = extractCARNIVALnodes(carnival_result)
# Run GSA hyper Geometric test
sig_pathways <- runGSAhyper(genes = nodes_carnival$sucesses,
universe = nodes_carnival$bg, gsc = loadGSC(pathways))
sig_pathways_df <- as.data.frame(sig_pathways$resTab)  %>%
tibble::rownames_to_column(var = "pathway")
View(sig_pathways_df)
#data for plotting
PathwaysSelect <- sig_pathways_df %>%
dplyr::select(pathway, `p-value`, `Adjusted p-value`) %>%
dplyr::filter(`Adjusted p-value` <= 0.01) %>%
dplyr::rename(pvalue = `p-value`, AdjPvalu = `Adjusted p-value`) %>%
dplyr::mutate(pathway = as.factor(pathway))
PathwaysSelect <- data.frame(t(apply(PathwaysSelect, 1, function(r){
aux = unlist(strsplit( sub("_",";", r["pathway"]), ";" ))
r["pathway"] = gsub("_", " ", aux[2])
return(c(r, "source" = aux[1]))
})))
colnames(PathwaysSelect) = c("pathway", "pvalue", "AdjPvalu", "source")
PathwaysSelect$AdjPvalu = as.numeric(PathwaysSelect$AdjPvalu)
ggdata = PathwaysSelect %>%
dplyr::filter(AdjPvalu <= 0.05) %>%
dplyr::group_by(source) %>%
dplyr::arrange(AdjPvalu) %>%
dplyr::slice(1:5)
# Visualize top results
ggplot(ggdata, aes(y = reorder(pathway, AdjPvalu), x = -log10(AdjPvalu)), color = source) +
geom_bar(stat = "identity") +
facet_grid(source ~ ., scales="free_y") +
scale_x_continuous(
expand = c(0.01, 0.01),
limits = c(0, ceiling(max(-log10(PathwaysSelect$AdjPvalu)))),
breaks = seq(floor(min(-log10(PathwaysSelect$AdjPvalu))), ceiling(max(-log10(PathwaysSelect$AdjPvalu))), 1),
labels = math_format(10^-.x)
) +
annotation_logticks(sides = "bt") +
theme_bw() +
theme(axis.title = element_text(face = "bold", size = 12),
axis.text.y = element_text(size = 6)) +
ylab("")
#read CARNIVAL results
carnival_result = readRDS("results/pc_carnival_result.rds")
# export to cytoscape
SIF <- as.data.frame(carnival_result$weightedSIF)
ATT <- as.data.frame(carnival_result$nodesAttributes)
View(ATT)
## Running CARNIVAL
load("data/data_string_PC_BMSC_220613.RData")
View(merged_analysis_PC_8DS_ID_all)
ATT <- merge(ATT, merged_analysis_PC_8DS_ID_all[ , c("effectSize", "fisherFDRMin")], by.x = "Node", by.y = "hgnc_symbol", all.x = TRUE)
ATT <- merge(ATT, merged_analysis_PC_8DS_ID_all[ , c("effectSize", "fisherFDRMin")], by = c("Node"="hgnc_symbol"), all.x = TRUE)
ATT <- merge(ATT, merged_analysis_PC_8DS_ID_all[ , c("hgnc_symbol","effectSize", "fisherFDRMin")], by = c("Node"="hgnc_symbol"), all.x = TRUE)
ATT <- left_join(ATT, merged_analysis_PC_8DS_ID_all[ , c("effectSize", "fisherFDRMin")], by = c("Node"="hgnc_symbol"), all.x = TRUE)
library(dplyr)
ATT <- left_join(ATT, merged_analysis_PC_8DS_ID_all[ , c("effectSize", "fisherFDRMin")], by = c("Node"="hgnc_symbol"), all.x = TRUE)
ATT <- left_join(ATT, merged_analysis_PC_8DS_ID_all[ , c("hgnc_symbol","effectSize", "fisherFDRMin")], by = c("Node"="hgnc_symbol"), all.x = TRUE)
View(ATT)
ATT[is.na(ATT)] <- " "
write_csv(SIF, file = "results/PC_SIF.csv")
write_csv(ATT, file = "results/PC_ATT.csv")
####################### Import packages and functions
library(readr)
library(data.table)
write_csv(SIF, file = "results/PC_SIF.csv")
write_csv(ATT, file = "results/PC_ATT.csv")
setwd("~/Documents/GitHub/MM_Pain_Network/PC")
# load pc meta-analysis data
load("data/data_string_PC_BMSC_220613.RData")
View(string_human_physical_uniprot)
View(string_human_physical_uniprot)
