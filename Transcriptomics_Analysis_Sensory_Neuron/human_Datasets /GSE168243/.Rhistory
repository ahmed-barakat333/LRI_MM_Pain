neuron <- t(neuron)
neuron$RPM <- neuron$counts*1000000/19370127
# remove genes with zero counts
neuron = neuron[,colSums(neuron) > 0]
# calculate colsums and store in a new variable
neuron_colsums<- t(data.frame(colSums(neuron)))
rownames(neuron_colsums) <- "counts"
neuron <- rbind(neuron_colsums,neuron)
neuron <- neuron[-grep("Neurons",rownames(neuron)),]
neuron <- t(data.frame(neuron))
neuron <- e[-grep("Excluded",rownames(e)),]
# remove genes with zero counts
neuron = neuron[,colSums(neuron) > 0]
# calculate colsums and store in a new variable
neuron_colsums<- t(data.frame(colSums(neuron)))
rownames(neuron_colsums) <- "counts"
neuron <- rbind(neuron_colsums,neuron)
neuron <- neuron[-grep("Neurons",rownames(neuron)),]
View(neuron)
neuron[1,] <- neuron[1,]*1000000/19370127
neuron[1,] <- neuron[1,]*1000000/19370127
View(neuron)
neuron <- e[-grep("Excluded",rownames(e)),]
# remove genes with zero counts
neuron = neuron[,colSums(neuron) > 0]
# calculate colsums and store in a new variable
neuron_colsums<- t(data.frame(colSums(neuron)))
rownames(neuron_colsums) <- "counts"
neuron <- rbind(neuron_colsums,neuron)
neuron <- neuron[-grep("Neurons",rownames(neuron)),]
View(neuron)
neuron[1,] <- neuron[1,]*1000000/19370127
View(neuron)
neuron <- t(neuron)
View(neuron)
# write table
write.csv(neuron,file="neuron.csv",row.names = TRUE)
# set working directory
setwd("W:/PhD/Projects/MM Pain-Bone/Computational Analysis/DRG")
# load package to read loom file
library(loomR)
# read the file
lfile <- connect(filename = "l1_drg.loom", mode = "r", skip.validate = T)
lfile
# content of the file
lfile[["matrix"]]
lfile[["col_attrs"]]
lfile[["row_attrs"]]
# prepare dataframe of gene cell matrix
all_cells.genes <- data.frame(lfile[["matrix"]][,])
dim(x = all_cells.genes)
gene_symbol <- lfile[["row_attrs/Gene"]][]
head(x = gene_symbol)
gene_symbol <- data.frame(as.list(gene_symbol))
cell_class <- lfile[["col_attrs/Class"]][]
head(x = cell_class)
cell_class <- data.frame(as.list(cell_class))
row.names(all_cells.genes) <- make.names(cell_class, unique=TRUE)
colnames(all_cells.genes ) <- gene_symbol
# remove not relevant cells (vascular, glia, astrocyte, blood)
a <- all_cells.genes[-grep("PeripheralGlia",rownames(all_cells.genes)),]
b <- a[-grep("Vascular",rownames(a)),]
c <- b[-grep("Astrocytes",rownames(b)),]
d <- c[-grep("Blood",rownames(c)),]
e <- d[-grep("Oligos",rownames(d)),]
neuron <- e[-grep("Excluded",rownames(e)),]
# remove genes with zero counts
neuron = neuron[,colSums(neuron) > 0]
# calculate RPM based on https://pubmed.ncbi.nlm.nih.gov/33727337/
neuron_colsums<- t(data.frame(colSums(neuron)))
rownames(neuron_colsums) <- "counts"
neuron <- rbind(neuron_colsums,neuron)
neuron <- neuron[-grep("Neurons",rownames(neuron)),]
neuron[1,] <- neuron[1,]*1000000/19370127
neuron <- t(neuron)
# map from mouse to human genes
musGenes <- c("Hmmr", "Tlx3", "Cpeb4")
convertMouseGeneList <- function(x){
require("biomaRt")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl")
genesV2 = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = x , mart = mouse, attributesL = c("hgnc_symbol"), martL = human, uniqueRows=T)
humanx <- unique(genesV2[, 2])
# Print the first 6 genes found to the screen
print(head(humanx))
return(humanx)
}
genes <- convertMouseGeneList(musGenes)
View(neuron)
genes <- convertMouseGeneList(rownames(neuron))
# set working directory
setwd("W:/PhD/Projects/MM Pain-Bone/Computational Analysis/DRG")
setwd("W:/PhD/Projects/MM Pain-Bone/Computational Analysis/Neuron Data/Nociceptor/PMID30096314")
# load package to read loom file
library(loomR)
# read the file
lfile <- connect(filename = "l1_drg.loom", mode = "r", skip.validate = T)
lfile
# content of the file
lfile[["matrix"]]
lfile[["col_attrs"]]
lfile[["row_attrs"]]
# prepare dataframe of gene cell matrix
all_cells.genes <- data.frame(lfile[["matrix"]][,])
dim(x = all_cells.genes)
View(all_cells.genes)
gene_symbol <- lfile[["row_attrs/Gene"]][]
head(x = gene_symbol)
gene_symbol <- data.frame(as.list(gene_symbol))
cell_class <- lfile[["col_attrs/Class"]][]
head(x = cell_class)
cell_class <- data.frame(as.list(cell_class))
row.names(all_cells.genes) <- make.names(cell_class, unique=TRUE)
colnames(all_cells.genes ) <- gene_symbol
View(gene_symbol)
View(all_cells.genes)
# remove not relevant cells (vascular, glia, astrocyte, blood)
a <- all_cells.genes[-grep("PeripheralGlia",rownames(all_cells.genes)),]
b <- a[-grep("Vascular",rownames(a)),]
c <- b[-grep("Astrocytes",rownames(b)),]
d <- c[-grep("Blood",rownames(c)),]
e <- d[-grep("Oligos",rownames(d)),]
neuron <- e[-grep("Excluded",rownames(e)),]
remove(a,b,c,d,e)
View(neuron)
View(neuron)
neuron <- t(neuron)
neuron <- data.frame(t(neuron))
View(neuron)
neuron <- data.frame(t(neuron))
View(neuron)
neuron$counts <- rowsum(neuron)
neuron$counts <- rowSums(neuron)
View(neuron)
neuron <- neuron[1738]
View(neuron)
library(GeoTcgaData)
neuron <- countToTpm_matrix(neuron)
View(neuron)
neuron <- countToTpm_matrix(data.matrix(neuron))
d <- countToTpm_matrix(neuron)
is.na(neuron)
sum(is.na(neuron))
rownames(neuron) <- toupper(rownames(neuron))
neuron <- neuron[1738]
# remove not relevant cells (vascular, glia, astrocyte, blood)
a <- all_cells.genes[-grep("PeripheralGlia",rownames(all_cells.genes)),]
b <- a[-grep("Vascular",rownames(a)),]
c <- b[-grep("Astrocytes",rownames(b)),]
d <- c[-grep("Blood",rownames(c)),]
e <- d[-grep("Oligos",rownames(d)),]
neuron <- e[-grep("Excluded",rownames(e)),]
remove(a,b,c,d,e)
neuron <- data.frame(t(neuron))
neuron$counts <- rowSums(neuron)
neuron <- neuron[1738]
View(neuron)
# sum counts for same gene
require(dplyr)
neuron <- data.frame(neuron %>%
group_by(rownames(neuron)) %>%
summarise_all(funs(sum)))
View(neuron)
View(neuron)
# set working directory
setwd("W:/PhD/Projects/MM Pain-Bone/Computational Analysis/Neuron Data/Nociceptor/PMID30096314")
# load package to read loom file
library(loomR)
# read the file
lfile <- connect(filename = "l1_drg.loom", mode = "r", skip.validate = T)
lfile
# content of the file
lfile[["matrix"]]
lfile[["col_attrs"]]
lfile[["row_attrs"]]
# prepare dataframe of gene cell matrix
all_cells.genes <- data.frame(lfile[["matrix"]][,])
dim(x = all_cells.genes)
gene_symbol <- lfile[["row_attrs/Gene"]][]
head(x = gene_symbol)
gene_symbol <- data.frame(as.list(gene_symbol))
cell_class <- lfile[["col_attrs/Class"]][]
head(x = cell_class)
cell_class <- data.frame(as.list(cell_class))
row.names(all_cells.genes) <- make.names(cell_class, unique=TRUE)
colnames(all_cells.genes ) <- gene_symbol
# remove not relevant cells (vascular, glia, astrocyte, blood)
a <- all_cells.genes[-grep("PeripheralGlia",rownames(all_cells.genes)),]
b <- a[-grep("Vascular",rownames(a)),]
c <- b[-grep("Astrocytes",rownames(b)),]
d <- c[-grep("Blood",rownames(c)),]
e <- d[-grep("Oligos",rownames(d)),]
neuron <- e[-grep("Excluded",rownames(e)),]
remove(a,b,c,d,e)
neuron <- data.frame(t(neuron))
View(neuron)
neuron$counts <- rowSums(neuron)
neuron <- neuron[1738]
View(neuron)
neuron$gene_id <- rownames(neuron)
View(neuron)
sum(duplicated(neuron$gene_id))
# set working directory
setwd("W:/PhD/Projects/MM Pain-Bone/Computational Analysis/Neuron Data/Nociceptor/PMID30096314")
# load package to read loom file
library(loomR)
# read the file
lfile <- connect(filename = "l1_drg.loom", mode = "r", skip.validate = T)
lfile
# content of the file
lfile[["matrix"]]
lfile[["col_attrs"]]
lfile[["row_attrs"]]
# prepare dataframe of gene cell matrix
all_cells.genes <- data.frame(lfile[["matrix"]][,])
dim(x = all_cells.genes)
gene_symbol <- lfile[["row_attrs/Gene"]][]
head(x = gene_symbol)
gene_symbol <- data.frame(as.list(gene_symbol))
cell_class <- lfile[["col_attrs/Class"]][]
head(x = cell_class)
cell_class <- data.frame(as.list(cell_class))
row.names(all_cells.genes) <- make.names(cell_class, unique=TRUE)
colnames(all_cells.genes ) <- gene_symbol
# remove not relevant cells (vascular, glia, astrocyte, blood)
a <- all_cells.genes[-grep("PeripheralGlia",rownames(all_cells.genes)),]
b <- a[-grep("Vascular",rownames(a)),]
c <- b[-grep("Astrocytes",rownames(b)),]
d <- c[-grep("Blood",rownames(c)),]
e <- d[-grep("Oligos",rownames(d)),]
neuron <- e[-grep("Excluded",rownames(e)),]
remove(a,b,c,d,e)
neuron <- data.frame(t(neuron))
neuron$counts <- rowSums(neuron)
neuron <- neuron[1738]
View(neuron)
rownames() <- toupper(rownames(neuron))
rownames(neuron) <- toupper(rownames(neuron))
neuron$gene_id <- toupper(rownames(neuron))
View(neuron)
sum(duplicated(neuron$gene_id))
neuron <- data.frame(neuron %>%
group_by(gene_id) %>%
summarise_all(funs(sum)))
# sum counts for same gene
require(dplyr)
neuron <- data.frame(neuron %>%
group_by(gene_id) %>%
summarise_all(funs(sum)))
rownames(neuron) <- neuron$gene_id
neuron$gene_id <- NULL
View(neuron)
library(GeoTcgaData)
d <- countToTpm_matrix(neuron)
View(neuron)
neuron[1,] <- NULL
neuron[-1, ]
neuron <- neuron[-1, ]
d <- countToTpm_matrix(neuron)
# remove not relevant cells (vascular, glia, astrocyte, blood)
a <- all_cells.genes[-grep("PeripheralGlia",rownames(all_cells.genes)),]
b <- a[-grep("Vascular",rownames(a)),]
c <- b[-grep("Astrocytes",rownames(b)),]
d <- c[-grep("Blood",rownames(c)),]
e <- d[-grep("Oligos",rownames(d)),]
neuron <- e[-grep("Excluded",rownames(e)),]
remove(a,b,c,d,e)
neuron <- data.frame(t(neuron))
neuron$counts <- rowSums(neuron)
neuron <- neuron[1738]
View(neuron)
neuron$gene_id <- rownames(neuron)
# sum counts for same gene
require(dplyr)
neuron <- data.frame(neuron %>%
group_by(gene_id) %>%
summarise_all(funs(sum)))
rownames(neuron) <- neuron$gene_id
neuron$gene_id <- NULL
neuron$gene_id <- rownames(neuron)
# sum counts for same gene
require(dplyr)
neuron <- data.frame(neuron %>%
group_by(gene_id) %>%
summarise_all(funs(sum)))
neuron <- neuron[-1, ]
rownames(neuron) <- neuron$gene_id
neuron$gene_id <- NULL
library(GeoTcgaData)
d <- countToTpm_matrix(neuron)
d <- countToTpm_matrix(matrix(neuron))
# remove not relevant cells (vascular, glia, astrocyte, blood)
a <- all_cells.genes[-grep("PeripheralGlia",rownames(all_cells.genes)),]
b <- a[-grep("Vascular",rownames(a)),]
c <- b[-grep("Astrocytes",rownames(b)),]
d <- c[-grep("Blood",rownames(c)),]
e <- d[-grep("Oligos",rownames(d)),]
neuron <- e[-grep("Excluded",rownames(e)),]
remove(a,b,c,d,e)
neuron <- data.frame(t(neuron))
neuron$counts <- rowSums(neuron)
neuron <- neuron[1738]
d <- matrix(neuron)
View(d)
neuron$gene_id <- rownames(neuron)
d <- matrix(neuron)
View(d)
d <- data.matrix(neuron)
View(d)
# set working directory
setwd("W:/PhD/Projects/MM Pain-Bone/Computational Analysis/Neuron Data/Nociceptor/PMID30096314")
# load package to read loom file
library(loomR)
# read the file
lfile <- connect(filename = "l1_drg.loom", mode = "r", skip.validate = T)
lfile
# content of the file
lfile[["matrix"]]
lfile[["col_attrs"]]
lfile[["row_attrs"]]
# prepare dataframe of gene cell matrix
all_cells.genes <- data.frame(lfile[["matrix"]][,])
dim(x = all_cells.genes)
gene_symbol <- lfile[["row_attrs/Gene"]][]
head(x = gene_symbol)
gene_symbol <- data.frame(as.list(gene_symbol))
cell_class <- lfile[["col_attrs/Class"]][]
head(x = cell_class)
cell_class <- data.frame(as.list(cell_class))
row.names(all_cells.genes) <- make.names(cell_class, unique=TRUE)
colnames(all_cells.genes ) <- gene_symbol
# remove not relevant cells (vascular, glia, astrocyte, blood)
a <- all_cells.genes[-grep("PeripheralGlia",rownames(all_cells.genes)),]
b <- a[-grep("Vascular",rownames(a)),]
c <- b[-grep("Astrocytes",rownames(b)),]
d <- c[-grep("Blood",rownames(c)),]
e <- d[-grep("Oligos",rownames(d)),]
neuron <- e[-grep("Excluded",rownames(e)),]
remove(a,b,c,d,e)
neuron <- data.frame(t(neuron))
neuron$counts <- rowSums(neuron)
neuron <- neuron[1738]
neuron$gene_id <- rownames(neuron)
neuron <- data.matrix(neuron)
View(neuron)
neuron$gene_id <- NULL
View(neuron)
# remove not relevant cells (vascular, glia, astrocyte, blood)
a <- all_cells.genes[-grep("PeripheralGlia",rownames(all_cells.genes)),]
b <- a[-grep("Vascular",rownames(a)),]
c <- b[-grep("Astrocytes",rownames(b)),]
d <- c[-grep("Blood",rownames(c)),]
e <- d[-grep("Oligos",rownames(d)),]
neuron <- e[-grep("Excluded",rownames(e)),]
remove(a,b,c,d,e)
neuron <- data.frame(t(neuron))
neuron$counts <- rowSums(neuron)
neuron <- neuron[1738]
neuron <- data.matrix(neuron,,ncol=1)
neuron <- data.matrix(neuron,ncol=1)
neuron <- data.matrix(neuron,drop=FALSE)
neuron <- matrix(neuron,drop=FALSE)
View(neuron)
neuron <- as.matrix(neuron,drop=FALSE)
View(neuron)
library(GeoTcgaData)
d <- countToTpm_matrix(neuron)
View(neuron)
# set working directory
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/Datasets/GSE131230")
# read the file
GSE131230_raw <- read.csv("data/GSE131230_counts_official.csv", row.names = 1)
# sum counts per gene
GSE131230_raw$raw_counts <- rowSums(GSE131230_raw)
GSE131230_raw <- GSE131230_raw[27]
# get symbol from ensembl id
library(EnsDb.Mmusculus.v79)
ensembl_id <- ensembldb::select(EnsDb.Mmusculus.v79, keys= rownames(GSE131230_raw), keytype = "GENEID", columns = c("GENEID","SYMBOL"))
GSE131230_raw$GENEID <- rownames(GSE131230_raw)
GSE131230_raw <- merge(GSE131230_raw, ensembl_id, by="GENEID")
# get gene length
library (EDASeq)
ensembl_list <- GSE131230_raw$GENEID
genelength <- getGeneLengthAndGCContent(GSE131230_raw$GENEID, "mmu")
# set working directory
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/Datasets/GSE131230")
# read the file
GSE131230_raw <- read.csv("data/GSE131230_counts_official.csv", row.names = 1)
# sum counts per gene
GSE131230_raw$raw_counts <- rowSums(GSE131230_raw)
GSE131230_raw <- GSE131230_raw[27]
# get symbol from ensembl id
library(EnsDb.Mmusculus.v79)
# set working directory
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/Datasets/GSE131230")
# read the file
GSE131230_raw <- read.csv("data/GSE131230_counts_official.csv", row.names = 1)
View(GSE131230_raw)
# sum counts from different samples
GSE131230_raw$raw_counts <- rowSums(GSE131230_raw)
GSE131230_raw <- GSE131230_raw[27]
View(GSE131230_raw)
# get symbol from ensembl id
library(EnsDb.Mmusculus.v79)
ensembl_id <- ensembldb::select(EnsDb.Mmusculus.v79, keys= rownames(GSE131230_raw), keytype = "GENEID", columns = c("GENEID","SYMBOL"))
GSE131230_raw$GENEID <- rownames(GSE131230_raw)
GSE131230_raw <- merge(GSE131230_raw, ensembl_id, by="GENEID")
View(GSE131230_raw)
## read gene length file
genelength <- read.csv("data/GSE131230_genelength.csv", header = TRUE)
# combine files
colnames(genelength)[1] <- "GENEID"
GSE131230_raw<- merge(GSE131230_raw, genelength, by="GENEID")
GSE131230_raw$gc <- NULL
GSE131230_raw <- na.omit(GSE131230_raw)
View(GSE131230_raw)
# calculate tpm counts
GSE131230_tpm <- GSE131230_raw
GSE131230_tpm$tpm_counts <- GSE131230_raw$raw_counts/GSE131230_raw$length
GSE131230_tpm$tpm_counts <-  t(t(GSE131230_tpm$tpm_counts) * 1e6 / sum(GSE131230_tpm$tpm_counts))
# check for dupicate symbols
sum(duplicated(GSE131230_tpm$SYMBOL))
View(GSE131230_tpm)
GSE131230_tpm[2,4] <- NULL
GSE131230_tpm[,c(2,4)] <- list(NULL)
# summarize multiple ensembl id mapping to same symbol
require(dplyr)
GSE131230_tpm <- GSE131230_tpm %>%
group_by(SYMBOL) %>%
mutate(GENEID = paste0(GENEID, collapse = ", "))
# sum counts of same gene symbol
GSE131230_tpm <- data.frame(GSE131230_tpm %>%
group_by(GENEID,SYMBOL) %>%
summarise_all(funs(sum)))
# check for dupicate symbols
sum(duplicated(GSE131230_tpm$SYMBOL))
# filer based on hard threshold (tpm >= 0.5)
GSE131230_tpm_filtered <- GSE131230_tpm[GSE131230_tpm$tpm_counts >= 0.5, ]
# sort genes based on tpm counts
GSE131230_tpm_filtered_sorted <- GSE131230_tpm_filtered[order(-GSE131230_tpm_filtered$tpm_counts), ]
# delete rows with empty symbol
GSE131230_tpm_filtered_sorted <- GSE131230_tpm_filtered_sorted[-which(GSE131230_tpm_filtered_sorted$SYMBOL == ""), ]
View(GSE131230_tpm_filtered_sorted)
# write file
write.csv(GSE131230_tpm_filtered_sorted,file="GSE131230_tpm_filtered_sorted.csv",row.names = FALSE)
# write file
write.csv(GSE131230_tpm_filtered_sorted,file="results/GSE131230_tpm_filtered_sorted.csv",row.names = FALSE)
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/Datasets/GSE168243")
# read the file
GSM5134537_prep1_raw <- read.csv("data/GSM5134537_prep1.csv", row.names = 1)
View(GSM5134537_prep1_raw)
GSM5134538_prep2_raw <- read.csv("data/GSM5134538_prep2.csv", row.names = 1)
GSM5134539_prep3_raw <- read.csv("data/GSM5134539_prep3.csv", row.names = 1)
GSM5134540_prep4_raw <- read.csv("data/GSM5134540_prep4.csv", row.names = 1)
GSM5134541_prep5_raw <- read.csv("data/GSM5134541_prep5.csv", row.names = 1)
GSM5134542_prep6_raw <- read.csv("data/GSM5134542_prep6.csv", row.names = 1)
View(GSM5134541_prep5_raw)
View(GSM5134541_prep5_raw)
# sum counts from different cells
GSM5134537_prep1_raw$raw_counts <- rowSums(GSM5134537_prep1_raw)
GSM5134537_prep1_raw <- GSM5134537_prep1_raw[213]
View(GSM5134537_prep1_raw)
GSM5134538_prep2_raw$raw_counts <- rowSums(GSM5134538_prep2_raw)
GSM5134538_prep2_raw <- GSM5134538_prep2_raw[153]
GSM5134539_prep3_raw$raw_counts <- rowSums(GSM5134539_prep3_raw)
GSM5134539_prep3_raw <- GSM5134539_prep3_raw[771]
GSM5134540_prep4_raw$raw_counts <- rowSums(GSM5134540_prep4_raw)
GSM5134540_prep4_raw <- GSM5134540_prep4_raw[282]
GSM5134541_prep5_raw$raw_counts <- rowSums(GSM5134541_prep5_raw)
GSM5134542_prep6_raw$raw_counts <- rowSums(GSM5134542_prep6_raw)
View(GSM5134542_prep6_raw)
GSM5134542_prep6_raw <- GSM5134542_prep6_raw[343]
GSM5134541_prep5_raw <- GSM5134541_prep5_raw[81]
View(GSM5134541_prep5_raw)
# get ensembl id from symbol
library(EnsDb.Mmusculus.v79)
ensembl_id <- ensembldb::select(EnsDb.Mmusculus.v79, keys= rownames(GSM5134537_prep1_raw), keytype = "SYMBOL", columns = c("SYMBOL","GENEID"))
BiocManager::install("EnsDb.Hsapiens.v86")
# get ensembl id from symbol
library(EnsDb.Hsapiens.v86)
ensembl_id <- ensembldb::select(EnsDb.Hsapiens.v86, keys= rownames(GSM5134537_prep1_raw), keytype = "SYMBOL", columns = c("SYMBOL","GENEID"))
GSM5134537_prep1_raw$SYMBOL <- rownames(GSM5134537_prep1_raw)
GSM5134537_prep1_raw <- merge(GSM5134537_prep1_raw, ensembl_id, by="SYMBOL")
View(GSM5134537_prep1_raw)
View(ensembl_id)
GSM5134538_prep2_raw$SYMBOL <- rownames(GSM5134538_prep2_raw)
GSM5134538_prep2_raw <- merge(GSM5134538_prep2_raw, ensembl_id, by="SYMBOL")
GSM5134539_prep3_raw$SYMBOL <- rownames(GSM5134539_prep3_raw)
GSM5134539_prep3_raw <- merge(GSM5134539_prep3_raw, ensembl_id, by="SYMBOL")
GSM5134540_prep4_raw$SYMBOL <- rownames(GSM5134540_prep4_raw)
GSM5134540_prep4_raw <- merge(GSM5134540_prep4_raw, ensembl_id, by="SYMBOL")
GSM5134541_prep5_raw$SYMBOL <- rownames(GSM5134541_prep5_raw)
GSM5134541_prep5_raw <- merge(GSM5134541_prep5_raw, ensembl_id, by="SYMBOL")
GSM5134542_prep6_raw$SYMBOL <- rownames(GSM5134542_prep6_raw)
GSM5134542_prep6_raw <- merge(GSM5134542_prep6_raw, ensembl_id, by="SYMBOL")
View(GSM5134542_prep6_raw)
# get gene length
library (EDASeq)
ensembl_list <- ensembl_id$GENEID
genelength <- getGeneLengthAndGCContent(ensembl_id$GENEID, "hsa")
# set working directory
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/Datasets/GSE168243")
setwd("~/Work/PhD/Projects/Comput MM Pain/Computational Analysis/Ligand_Receptor/Data/Sensory_Neuron/Neuron/hDatasets /GSE168243")
# read  files
GSM5134537_prep1_raw <- read.csv("data/GSM5134537_prep1.csv", row.names = 1)
GSM5134538_prep2_raw <- read.csv("data/GSM5134538_prep2.csv", row.names = 1)
GSM5134539_prep3_raw <- read.csv("data/GSM5134539_prep3.csv", row.names = 1)
GSM5134540_prep4_raw <- read.csv("data/GSM5134540_prep4.csv", row.names = 1)
GSM5134541_prep5_raw <- read.csv("data/GSM5134541_prep5.csv", row.names = 1)
GSM5134542_prep6_raw <- read.csv("data/GSM5134542_prep6.csv", row.names = 1)
View(GSM5134537_prep1_raw)
View(GSM5134541_prep5_raw)
