color="red", linetype="dashed", size=1)
pc_0.9_pain
grid.arrange(pc_0.4_pain, pc_0.7_pain, pc_0.9_pain, ncol=3)
g <- arrangeGrob(pc_0.4, pc_0.7, pc_0.9, ncol=3)
ggsave(file="results/pc_all_pain.png", g)
pc_0.4_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.4))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 1150, y=0.010, label = "p-value=0.0003") +
labs(title="0.4 cutoff",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=582),
color="red", linetype="dashed", size=1)
pc_0.4_pain
tiff("test.tiff", units="in", width=15, height=8, res=300)
pc_0.4_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.4))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 1150, y=0.010, label = "p-value=0.0003") +
labs(title="0.4 cutoff",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=582),
color="red", linetype="dashed", linewidth=1)
pc_0.4_pain
pc_0.7_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 570, y=0.010, label = "p-value=0.0005") +
labs(title="0.7 cutoff",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=303),
color="red", linetype="dashed", linewidth=1)
pc_0.7_pain
pc_0.9_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.9))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 425, y=0.010, label = "p-value=0.0049") +
labs(title="0.9 cutoff",x="Number of interactions", y = "Density")+
theme_classic() +
geom_vline(aes(xintercept=196),
color="red", linetype="dashed", linewidth=1)
pc_0.9_pain
grid.arrange(pc_0.4_pain, pc_0.7_pain, pc_0.9_pain, ncol=3)
g <- arrangeGrob(pc_0.4, pc_0.7, pc_0.9, ncol=3)
tiff("test.tiff", units="in", width=15, height=8, res=300)
pc_0.4_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.4))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 1150, y=0.010, label = "p-value=0.0003") +
labs(title="0.4 cutoff",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=582),
color="red", linetype="dashed", linewidth=1)
pc_0.4_pain
pc_0.7_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 570, y=0.010, label = "p-value=0.0005") +
labs(title="0.7 cutoff",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=303),
color="red", linetype="dashed", linewidth=1)
pc_0.7_pain
pc_0.9_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.9))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 425, y=0.010, label = "p-value=0.0049") +
labs(title="0.9 cutoff",x="Number of interactions", y = "Density")+
theme_classic() +
geom_vline(aes(xintercept=196),
color="red", linetype="dashed", linewidth=1)
pc_0.9_pain
grid.arrange(pc_0.4_pain, pc_0.7_pain, pc_0.9_pain, ncol=3)
g <- arrangeGrob(pc_0.4_pain, pc_0.7_pain, pc_0.9_pain, ncol=3)
ggsave(file="results/pc_all_pain.png", g)
tiff("test.tiff", units="in", width=15, height=8, res=300)
pc_0.4_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.4))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 700, y=0.010, label = "p-value=0.0003") +
labs(title="0.4 cutoff",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=582),
color="red", linetype="dashed", linewidth=1)
pc_0.4_pain
pc_0.7_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 400, y=0.010, label = "p-value=0.0005") +
labs(title="0.7 cutoff",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=303),
color="red", linetype="dashed", linewidth=1)
pc_0.7_pain
pc_0.9_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.9))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 300, y=0.010, label = "p-value=0.0049") +
labs(title="0.9 cutoff",x="Number of interactions", y = "Density")+
theme_classic() +
geom_vline(aes(xintercept=196),
color="red", linetype="dashed", linewidth=1)
pc_0.9_pain
grid.arrange(pc_0.4_pain, pc_0.7_pain, pc_0.9_pain, ncol=3)
g <- arrangeGrob(pc_0.4_pain, pc_0.7_pain, pc_0.9_pain, ncol=3)
ggsave(file="results/pc_all_pain.png", g)
tiff("test.tiff", units="in", width=15, height=8, res=300)
pc_0.4_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.4))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 500, y=0.010, label = "p-value=0.0003") +
labs(title="0.4 cutoff",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=582),
color="red", linetype="dashed", linewidth=1)
pc_0.4_pain
pc_0.7_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 400, y=0.010, label = "p-value=0.0005") +
labs(title="0.7 cutoff",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=303),
color="red", linetype="dashed", linewidth=1)
pc_0.7_pain
pc_0.9_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.9))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 300, y=0.010, label = "p-value=0.0049") +
labs(title="0.9 cutoff",x="Number of interactions", y = "Density")+
theme_classic() +
geom_vline(aes(xintercept=196),
color="red", linetype="dashed", linewidth=1)
pc_0.9_pain
grid.arrange(pc_0.4_pain, pc_0.7_pain, pc_0.9_pain, ncol=3)
g <- arrangeGrob(pc_0.4_pain, pc_0.7_pain, pc_0.9_pain, ncol=3)
ggsave(file="results/pc_all_pain.png", g)
tiff("test.tiff", units="in", width=15, height=8, res=300)
pc_0.4_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.4))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 500, y=0.010, label = "p-value=0.0003") +
labs(title="0.4 cutoff",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=582),
color="red", linetype="dashed", linewidth=1)
pc_0.4_pain
pc_0.7_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 300, y=0.010, label = "p-value=0.0005") +
labs(title="0.7 cutoff",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=303),
color="red", linetype="dashed", linewidth=1)
pc_0.7_pain
pc_0.9_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.9))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 200, y=0.010, label = "p-value=0.0049") +
labs(title="0.9 cutoff",x="Number of interactions", y = "Density")+
theme_classic() +
geom_vline(aes(xintercept=196),
color="red", linetype="dashed", linewidth=1)
pc_0.9_pain
grid.arrange(pc_0.4_pain, pc_0.7_pain, pc_0.9_pain, ncol=3)
g <- arrangeGrob(pc_0.4_pain, pc_0.7_pain, pc_0.9_pain, ncol=3)
ggsave(file="results/pc_all_pain.png", g)
tiff("results/pc_all_0.7.tiff", units="in", width=6, height=5, res=300)
pc_0.7 <- ggplot() + aes(as.numeric(pc_178_1e4_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.015) +
annotate("text", x = 425, y=0.01, label = "p-value = 0") +
labs(title="",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=527),
color="red", linetype="dashed", linewidth=1)
pc_0.7
dev.off()
tiff("results/bmsc_all_pain_0.7.tiff", units="in", width=6, height=5, res=300)
bmsc_0.7 <- ggplot() + aes(as.numeric(bmsc_104_1e4_pain_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.028) +
annotate("text", x = 250, y=0.01, label = "p-value = 0.0349") +
labs(title="",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=390),
color="red", linetype="dashed", linewidth=1)
bmsc_0.7
dev.off()
tiff("results/bmsc_all_pain_0.7.tiff", units="in", width=6, height=5, res=300)
bmsc_0.7 <- ggplot() + aes(as.numeric(bmsc_104_1e4_pain_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.028) +
annotate("text", x = 250, y=0.01, label = "p-value = 0.0349") +
labs(title="",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=218),
color="red", linetype="dashed", linewidth=1)
bmsc_0.7
dev.off()
tiff("results/bmsc_all_pain_0.7.tiff", units="in", width=6, height=5, res=300)
bmsc_0.7_pain <- ggplot() + aes(as.numeric(bmsc_104_1e4_pain_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.028) +
annotate("text", x = 250, y=0.01, label = "p-value = 0.0349") +
labs(title="",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=218),
color="red", linetype="dashed", linewidth=1)
bmsc_0.7_pain
dev.off()
tiff("results/pc_all_pain_0.7.tiff", units="in", width=6, height=5, res=300)
pc_0.7_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 300, y=0.010, label = "p-value=0.0005") +
labs(title="0.7 cutoff",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=303),
color="red", linetype="dashed", linewidth=1)
pc_0.7_pain
dev.off()
tiff("results/pc_all_pain_0.7.tiff", units="in", width=6, height=5, res=300)
pc_0.7_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 200, y=0.010, label = "p-value=0.0005") +
labs(title="0.7 cutoff",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=303),
color="red", linetype="dashed", linewidth=1)
pc_0.7_pain
dev.off()
tiff("results/pc_all_pain_0.7.tiff", units="in", width=6, height=5, res=300)
pc_0.7_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 280, y=0.010, label = "p-value=0.0005") +
labs(title="0.7 cutoff",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=303),
color="red", linetype="dashed", linewidth=1)
pc_0.7_pain
dev.off()
tiff("results/pc_all_pain_0.7.tiff", units="in", width=6, height=5, res=300)
pc_0.7_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 280, y=0.010, label = "p-value=0.0005") +
labs(title="",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=303),
color="red", linetype="dashed", linewidth=1)
pc_0.7_pain
dev.off()
# set working directory
setwd("~/Work/PhD/Projects/MM Pain/Computational Analysis/Communication_Score")
# load data
load("data/data_string_PC_BMSC_220613.RData")
# create an empty dataframe to store p values
p_value <- data.frame(matrix(NA, nrow = 3, ncol = 4))
rownames(p_value) <- c("0.4 cutoff","0.7 cutoff","0.9 cutoff")
colnames(p_value) <- c("BMSC(All)_Receptor(All)","BMSC(All)_Receptor(Pain)","PC(All)_Receptor(All)","PC(All)_Receptor(Pain)")
####BMSC(All)_Receptor(All)####
# filter string interactions 0.4
string_human_physical_uniprot_0.4 <- string_human_physical_uniprot[string_human_physical_uniprot$score >= 400,]
## filter string interactions
string_human_physical_uniprot_0.7 <- string_human_physical_uniprot[string_human_physical_uniprot$score >= 700,]
## filter string interactions
string_human_physical_uniprot_0.9 <- string_human_physical_uniprot[string_human_physical_uniprot$score >= 900,]
# check how many DEG of MM-BMSC genes are annotated as ligand and have at least 1 extracellular resource
nrow(merged_analysis_BMSC_5DS_ID_proteome_annot[merged_analysis_BMSC_5DS_ID_proteome_annot$ligand == TRUE & merged_analysis_BMSC_5DS_ID_proteome_annot$num_sources_extracell > 0, ])
# check how many all BMSC genes are annotated as ligand and have at least 1 extracellular resource
nrow(merged_analysis_BMSC_5DS_ID_all[merged_analysis_BMSC_5DS_ID_all$ligand == TRUE & merged_analysis_BMSC_5DS_ID_all$num_sources_extracell > 0, ])
# check how many sensory neuron genes are annotated as receptor and have at least 1 extracellular resource and have at least 1 "pain" annotation
nrow(proteins_sensory_neurons_annot_transc[proteins_sensory_neurons_annot_transc$receptor == TRUE & proteins_sensory_neurons_annot_transc$num_sources_extracell > 0 & proteins_sensory_neurons_annot_transc$num_sources_pain > 0, ])
# create a subset dataframe that contains all BMSC extracellular ligands to sample from
all_bmsc_ligands_ex <- merged_analysis_BMSC_5DS_ID_all[merged_analysis_BMSC_5DS_ID_all$ligand == TRUE & merged_analysis_BMSC_5DS_ID_all$num_sources_extracell > 0, ]
## filter string interactions
string_human_physical_uniprot_0.4 <- string_human_physical_uniprot[string_human_physical_uniprot$score >= 400,]
bmsc_104_1e4_pain_receptor_interactions_0.4 <- read.csv("data/bmsc_104_1e4_pain_receptor_interactions_0.4.csv")
View(bmsc_104_1e4_pain_receptor_interactions_0.4)
bmsc_104_1e4_pain_receptor_interactions_0.4 <- read_csv("data/bmsc_104_1e4_pain_receptor_interactions_0.4.csv")
bmsc_104_1e4_pain_receptor_interactions_0.4 <- t(read.csv("data/bmsc_104_1e4_pain_receptor_interactions_0.4.csv"))
bmsc_104_1e4_pain_receptor_interactions_0.4 <- as.vector(t(read.csv("data/bmsc_104_1e4_pain_receptor_interactions_0.4.csv")))
## observed interactions for DEG from MM-BMSC
mm_bmsc_104_pain_receptor_interactions_0.4 <- subset(string_human_physical_uniprot_0.4,
string_human_physical_uniprot_0.4$protein1 %in%
merged_analysis_BMSC_5DS_ID_proteome_annot[merged_analysis_BMSC_5DS_ID_proteome_annot$ligand == TRUE & merged_analysis_BMSC_5DS_ID_proteome_annot$num_sources_extracell > 0, ]$uniprotswissprot
& string_human_physical_uniprot_0.4$protein2 %in%
proteins_sensory_neurons_annot_transc[proteins_sensory_neurons_annot_transc$receptor == TRUE & proteins_sensory_neurons_annot_transc$num_sources_extracell > 0 & proteins_sensory_neurons_annot_transc$num_sources_pain > 0,]$uniprot_id)
nrow(mm_bmsc_104_pain_receptor_interactions_0.4)
hist(bmsc_104_1e4_pain_receptor_interactions_0.4)
## add observed interaction
abline(v=411, col="blue")
## calculate p value
pvalue_bmsc_104_1e4_pain_receptor_interactions_0.4 <- mean(bmsc_104_1e4_pain_receptor_interactions_0.4>=411)
## filter string interactions
string_human_physical_uniprot_0.7 <- string_human_physical_uniprot[string_human_physical_uniprot$score >= 700,]
bmsc_104_1e4_pain_receptor_interactions_0.7 <- as.vector(t(read.csv("data/bmsc_104_1e4_pain_receptor_interactions_0.7.csv")))
hist(bmsc_104_1e4_pain_receptor_interactions_0.7)
## observed interactions for DEG from MM-BMSC
mm_bmsc_104_pain_receptor_interactions_0.7 <- subset(string_human_physical_uniprot_0.7,
string_human_physical_uniprot_0.7$protein1 %in%
merged_analysis_BMSC_5DS_ID_proteome_annot[merged_analysis_BMSC_5DS_ID_proteome_annot$ligand == TRUE & merged_analysis_BMSC_5DS_ID_proteome_annot$num_sources_extracell > 0, ]$uniprotswissprot
& string_human_physical_uniprot_0.7$protein2 %in%
proteins_sensory_neurons_annot_transc[proteins_sensory_neurons_annot_transc$receptor == TRUE & proteins_sensory_neurons_annot_transc$num_sources_extracell > 0 & proteins_sensory_neurons_annot_transc$num_sources_pain > 0,]$uniprot_id)
nrow(mm_bmsc_104_pain_receptor_interactions_0.7)
## add observed interaction
abline(v=218, col="blue")
## calculate p value
pvalue_bmsc_104_1e4_pain_receptor_interactions_0.7 <- mean(bmsc_104_1e4_pain_receptor_interactions_0.7>=218)
bmsc_0.7_pain <- ggplot() + aes(as.numeric(bmsc_104_1e4_pain_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=1, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.028) +
annotate("text", x = 250, y=0.01, label = "p-value = 0.0349") +
labs(title="",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=218),
color="red", linetype="dashed", linewidth=1)
# plot ggplot histogram
library(ggplot2)
library(gridExtra)
library(grid)
bmsc_0.7_pain <- ggplot() + aes(as.numeric(bmsc_104_1e4_pain_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=1, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.028) +
annotate("text", x = 250, y=0.01, label = "p-value = 0.0349") +
labs(title="",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=218),
color="red", linetype="dashed", linewidth=1)
bmsc_0.7_pain
bmsc_0.7_pain <- ggplot() + aes(as.numeric(bmsc_104_1e4_pain_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.028) +
annotate("text", x = 250, y=0.01, label = "p-value = 0.0349") +
labs(title="",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=218),
color="red", linetype="dashed", linewidth=1)
bmsc_0.7_pain
# set working directory
setwd("~/Work/PhD/Projects/MM Pain/Computational Analysis/Communication_Score")
# load data
load("data/data_string_PC_BMSC_220613.RData")
# create an empty dataframe to store p values
p_value <- data.frame(matrix(NA, nrow = 3, ncol = 4))
rownames(p_value) <- c("0.4 cutoff","0.7 cutoff","0.9 cutoff")
colnames(p_value) <- c("BMSC(All)_Receptor(All)","BMSC(All)_Receptor(Pain)","PC(All)_Receptor(All)","PC(All)_Receptor(Pain)")
####BMSC(All)_Receptor(All)####
# filter string interactions 0.4
string_human_physical_uniprot_0.4 <- string_human_physical_uniprot[string_human_physical_uniprot$score >= 400,]
# density function
set.seed(3333)
bmsc.dens.obs_0.7 <- density(mm_bmsc_ligands_ex$degree_0.7, n=length(all_bmsc_ligands_ex$degree_0.7), adjust = 2)
# check how many sensory neuron are annotated as receptors and have at least 1 extracellular resource
nrow(proteins_sensory_neurons_annot_transc[proteins_sensory_neurons_annot_transc$receptor == TRUE & proteins_sensory_neurons_annot_transc$num_sources_extracell > 0, ])
# check how many DEG of MM-BMSC genes are annotated as ligand and have at least 1 extracellular resource
nrow(merged_analysis_BMSC_5DS_ID_proteome_annot[merged_analysis_BMSC_5DS_ID_proteome_annot$ligand == TRUE & merged_analysis_BMSC_5DS_ID_proteome_annot$num_sources_extracell > 0, ])
# create a subset dataframe that contains DEG of MM-BMSC extracellular ligands
mm_bmsc_ligands_ex <- merged_analysis_BMSC_5DS_ID_proteome_annot[merged_analysis_BMSC_5DS_ID_proteome_annot$ligand == TRUE & merged_analysis_BMSC_5DS_ID_proteome_annot$num_sources_extracell > 0, ]
# create a subset dataframe that contains all BMSC extracellular ligands to sample from
all_bmsc_ligands_ex <- merged_analysis_BMSC_5DS_ID_all[merged_analysis_BMSC_5DS_ID_all$ligand == TRUE & merged_analysis_BMSC_5DS_ID_all$num_sources_extracell > 0, ]
## filter string interactions
string_human_physical_uniprot_0.7 <- string_human_physical_uniprot[string_human_physical_uniprot$score >= 700,]
# get degree_0.7 (no. of interactions) distribution of DEG of MM-BMSC ligands - 0.7
mm_bmsc_ligands_ex$degree_0.7 <- NA
for(i in 1:nrow(mm_bmsc_ligands_ex)) {
protein <- mm_bmsc_ligands_ex[i, ]
protein_degree_0.7 <-subset(string_human_physical_uniprot_0.7,
string_human_physical_uniprot_0.7$protein1 %in%
protein$uniprotswissprot)
mm_bmsc_ligands_ex$degree_0.7[[i]] <- nrow(protein_degree_0.7)
}
# plot the distribution
mm_bmsc_degree_0.7 <-  as.numeric(unlist(mm_bmsc_ligands_ex$degree_0.7, use.names = FALSE))
hist(mm_bmsc_degree_0.7)
# sum of MM-BMSC degree_0.7
sum(mm_bmsc_degree_0.7)
# get degree_0.7 (no. of interactions) distribution of all BMSC ligands - 0.7
all_bmsc_ligands_ex$degree_0.7 <- NA
for(i in 1:nrow(all_bmsc_ligands_ex)) {
protein <- all_bmsc_ligands_ex[i, ]
protein_degree_0.7 <-subset(string_human_physical_uniprot_0.7,
string_human_physical_uniprot_0.7$protein1 %in%
protein$uniprotswissprot)
all_bmsc_ligands_ex$degree_0.7[[i]] <- nrow(protein_degree_0.7)
}
# plot the distribution
all_bmsc_degree_0.7 <- as.numeric(unlist(all_bmsc_ligands_ex$degree_0.7, use.names = FALSE))
hist(all_bmsc_degree_0.7)
# sum of all BMSC degree_0.7
sum(all_bmsc_degree_0.7)
# density function
set.seed(3333)
# check how many DEG of MM-BMSC genes are annotated as ligand and have at least 1 extracellular resource
nrow(merged_analysis_BMSC_5DS_ID_proteome_annot[merged_analysis_BMSC_5DS_ID_proteome_annot$ligand == TRUE & merged_analysis_BMSC_5DS_ID_proteome_annot$num_sources_extracell > 0, ])
# check how many all BMSC genes are annotated as ligand and have at least 1 extracellular resource
nrow(merged_analysis_BMSC_5DS_ID_all[merged_analysis_BMSC_5DS_ID_all$ligand == TRUE & merged_analysis_BMSC_5DS_ID_all$num_sources_extracell > 0, ])
# check how many sensory neuron genes are annotated as receptor and have at least 1 extracellular resource and have at least 1 "pain" annotation
nrow(proteins_sensory_neurons_annot_transc[proteins_sensory_neurons_annot_transc$receptor == TRUE & proteins_sensory_neurons_annot_transc$num_sources_extracell > 0 & proteins_sensory_neurons_annot_transc$num_sources_pain > 0, ])
# create a subset dataframe that contains all BMSC extracellular ligands to sample from
all_bmsc_ligands_ex <- merged_analysis_BMSC_5DS_ID_all[merged_analysis_BMSC_5DS_ID_all$ligand == TRUE & merged_analysis_BMSC_5DS_ID_all$num_sources_extracell > 0, ]
## filter string interactions
string_human_physical_uniprot_0.4 <- string_human_physical_uniprot[string_human_physical_uniprot$score >= 400,]
## create FOR loop for bootstrapping
bmsc_104_1e4_pain_receptor_interactions_0.4 <- list()
set.seed(3333)
for(i in 1:10000){
sample <- all_bmsc_ligands_ex[sample(nrow(all_bmsc_ligands_ex), 104, replace = TRUE, prob=bmsc.dens.obs_0.4$y), ]
interactions_sample <-subset(string_human_physical_uniprot_0.4,
string_human_physical_uniprot_0.4$protein1 %in%
sample$uniprotswissprot
& string_human_physical_uniprot_0.4$protein2 %in%
proteins_sensory_neurons_annot_transc[proteins_sensory_neurons_annot_transc$receptor == TRUE & proteins_sensory_neurons_annot_transc$num_sources_extracell > 0 & proteins_sensory_neurons_annot_transc$num_sources_pain > 0,]$uniprot_id)
bmsc_104_1e4_pain_receptor_interactions_0.4[[i]] <- nrow(interactions_sample)
}
## plot null (normal) sampling distribution
bmsc_104_1e4_pain_receptor_interactions_0.4 <- unlist(bmsc_104_1e4_pain_receptor_interactions_0.4, use.names = FALSE)
hist(bmsc_104_1e4_pain_receptor_interactions_0.4)
# check how many all BMSC genes are annotated as ligand and have at least 1 extracellular resource
nrow(merged_analysis_BMSC_5DS_ID_all[merged_analysis_BMSC_5DS_ID_all$ligand == TRUE & merged_analysis_BMSC_5DS_ID_all$num_sources_extracell > 0, ])
# check how many sensory neuron genes are annotated as receptor and have at least 1 extracellular resource and have at least 1 "pain" annotation
nrow(proteins_sensory_neurons_annot_transc[proteins_sensory_neurons_annot_transc$receptor == TRUE & proteins_sensory_neurons_annot_transc$num_sources_extracell > 0 & proteins_sensory_neurons_annot_transc$num_sources_pain > 0, ])
# create a subset dataframe that contains all BMSC extracellular ligands to sample from
all_bmsc_ligands_ex <- merged_analysis_BMSC_5DS_ID_all[merged_analysis_BMSC_5DS_ID_all$ligand == TRUE & merged_analysis_BMSC_5DS_ID_all$num_sources_extracell > 0, ]
## filter string interactions
string_human_physical_uniprot_0.4 <- string_human_physical_uniprot[string_human_physical_uniprot$score >= 400,]
## create FOR loop for bootstrapping
bmsc_104_1e4_pain_receptor_interactions_0.4 <- list()
set.seed(3333)
bmsc_104_1e4_pain_receptor_interactions_0.4 <- as.vector(t(read.csv("data/bmsc_104_1e4_pain_receptor_interactions_0.4.csv")))
## observed interactions for DEG from MM-BMSC
mm_bmsc_104_pain_receptor_interactions_0.4 <- subset(string_human_physical_uniprot_0.4,
string_human_physical_uniprot_0.4$protein1 %in%
merged_analysis_BMSC_5DS_ID_proteome_annot[merged_analysis_BMSC_5DS_ID_proteome_annot$ligand == TRUE & merged_analysis_BMSC_5DS_ID_proteome_annot$num_sources_extracell > 0, ]$uniprotswissprot
& string_human_physical_uniprot_0.4$protein2 %in%
proteins_sensory_neurons_annot_transc[proteins_sensory_neurons_annot_transc$receptor == TRUE & proteins_sensory_neurons_annot_transc$num_sources_extracell > 0 & proteins_sensory_neurons_annot_transc$num_sources_pain > 0,]$uniprot_id)
nrow(mm_bmsc_104_pain_receptor_interactions_0.4)
## add observed interaction
abline(v=411, col="blue")
hist(bmsc_104_1e4_pain_receptor_interactions_0.4)
## add observed interaction
abline(v=411, col="blue")
## create FOR loop for bootstrapping
bmsc_104_1e4_pain_receptor_interactions_0.7 <- list()
bmsc_104_1e4_pain_receptor_interactions_0.7 <- as.vector(t(read.csv("data/bmsc_104_1e4_pain_receptor_interactions_0.7.csv")))
hist(bmsc_104_1e4_pain_receptor_interactions_0.7)
## observed interactions for DEG from MM-BMSC
mm_bmsc_104_pain_receptor_interactions_0.7 <- subset(string_human_physical_uniprot_0.7,
string_human_physical_uniprot_0.7$protein1 %in%
merged_analysis_BMSC_5DS_ID_proteome_annot[merged_analysis_BMSC_5DS_ID_proteome_annot$ligand == TRUE & merged_analysis_BMSC_5DS_ID_proteome_annot$num_sources_extracell > 0, ]$uniprotswissprot
& string_human_physical_uniprot_0.7$protein2 %in%
proteins_sensory_neurons_annot_transc[proteins_sensory_neurons_annot_transc$receptor == TRUE & proteins_sensory_neurons_annot_transc$num_sources_extracell > 0 & proteins_sensory_neurons_annot_transc$num_sources_pain > 0,]$uniprot_id)
nrow(mm_bmsc_104_pain_receptor_interactions_0.7)
## add observed interaction
abline(v=218, col="blue")
tiff("results/bmsc_all_pain_0.7.tiff", units="in", width=11.5, height=3, res=300)
bmsc_0.7_pain <- ggplot() + aes(as.numeric(bmsc_104_1e4_pain_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.028) +
annotate("text", x = 250, y=0.01, label = "p-value = 0.0349") +
labs(title="",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=218),
color="red", linetype="dashed", linewidth=1)
library(ggplot2)
bmsc_0.7_pain <- ggplot() + aes(as.numeric(bmsc_104_1e4_pain_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.028) +
annotate("text", x = 250, y=0.01, label = "p-value = 0.0349") +
labs(title="",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=218),
color="red", linetype="dashed", linewidth=1)
bmsc_0.7_pain
dev.off()
## filter string interactions
string_human_physical_uniprot_0.7 <- string_human_physical_uniprot[string_human_physical_uniprot$score >= 700,]
## create FOR loop for bootstrapping
pc_178_1e4_pain_receptor_interactions_0.7 <- list()
set.seed(3333)
pc_178_1e4_pain_receptor_interactions_0.7 <- as.vector(t(read.csv("data/pc_178_1e4_pain_receptor_interactions_0.7.csv")))
hist(pc_178_1e4_pain_receptor_interactions_0.7)
## observed interactions for DEG from MM-pc
mm_pc_178_pain_receptor_interactions_0.7 <- subset(string_human_physical_uniprot_0.7,
string_human_physical_uniprot_0.7$protein1 %in%
merged_analysis_PC_8DS_ID_annot[merged_analysis_PC_8DS_ID_annot$ligand == TRUE & merged_analysis_PC_8DS_ID_annot$num_sources_extracell > 0, ]$uniprotswissprot
& string_human_physical_uniprot_0.7$protein2 %in%
proteins_sensory_neurons_annot_transc[proteins_sensory_neurons_annot_transc$receptor == TRUE & proteins_sensory_neurons_annot_transc$num_sources_extracell > 0 & proteins_sensory_neurons_annot_transc$num_sources_pain > 0,]$uniprot_id)
nrow(mm_pc_178_pain_receptor_interactions_0.7)
## add observed interaction
abline(v=303, col="blue")
## calculate p value
pvalue_pc_178_1e4_pain_receptor_interactions_0.7 <- mean(pc_178_1e4_pain_receptor_interactions_0.7>=303)
tiff("results/pc_all_pain_0.7.tiff", units="in", width=11.5, height=3, res=300)
pc_0.7_pain <- ggplot() + aes(as.numeric(pc_178_1e4_pain_receptor_interactions_0.7))+ geom_histogram(aes(y=after_stat(density)), binwidth=3, colour="darkblue", fill="lightblue")+
geom_density(alpha=0.2, fill="#FF6666") +
ylim(0.0000, 0.025) +
annotate("text", x = 280, y=0.010, label = "p-value=0.0005") +
labs(title="",x="Number of interactions", y = "Density")+
theme_classic()+
geom_vline(aes(xintercept=303),
color="red", linetype="dashed", linewidth=1)
pc_0.7_pain
dev.off()
setwd("~/Work/PhD/Projects/Comput MM Pain/Computational Analysis/Communication_Score")
# load data
load("data/data_string_PC_BMSC_220613.RData")
View(proteins_sensory_neurons_annot_transc)
