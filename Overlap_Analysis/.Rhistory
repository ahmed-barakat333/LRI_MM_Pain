guides(colour = guide_colourbar(order = 1))
dev.off()
## load data
pc_kinases <- read.csv("data/kinases/PC_Kinases.csv")
pc_kinases <- subset(pc_kinases, Hypergeometric.p.value < 0.05)
pc_kinases <- select(pc_kinases, Protein.Kinase, Hypergeometric.p.value)
pc_kinases$log10_p_value <- -log10(pc_kinases$Hypergeometric.p.value)
pc_kinases$Hypergeometric.p.value <- NULL
colnames(pc_kinases)[2] <- "Plasma Cells"
# set working directory
setwd("~/Work/PhD/Projects/MM Pain/Computational Analysis/Dot_Plot")
# load packages
library(data.table)
library(stats)
library(tidyverse)
library(reshape2)
library(readxl)
library(GeneOverlap)
library(plotly)
library(ggdendro)
library(gdata)
library(cowplot)
mm_cells_order <- c("Plasma Cells","Bone Marrow Stromal Cells", "Endothelial Cells", "Osteocytes","Osteogenic Precursor Cells",
"Adipocytes", "Natural Killer Cells", "Neutrophils", "Macrophages",
"Regulatory T Cells", "Hematopoietic Stem Cells","Whole Bone Marrow")
## load data
pc_kinases <- read.csv("data/kinases/PC_Kinases.csv")
pc_kinases <- subset(pc_kinases, Hypergeometric.p.value < 0.05)
pc_kinases <- select(pc_kinases, Protein.Kinase, Hypergeometric.p.value)
pc_kinases$log10_p_value <- -log10(pc_kinases$Hypergeometric.p.value)
pc_kinases$Hypergeometric.p.value <- NULL
colnames(pc_kinases)[2] <- "Plasma Cells"
bmsc_kinases <- read.csv("data/kinases/BMSC_Kinases.csv")
bmsc_kinases <- subset(bmsc_kinases, Hypergeometric.p.value < 0.05)
bmsc_kinases <- select(bmsc_kinases, Protein.Kinase, Hypergeometric.p.value)
bmsc_kinases$log10_p_value <- -log10(bmsc_kinases$Hypergeometric.p.value)
bmsc_kinases$Hypergeometric.p.value <- NULL
colnames(bmsc_kinases)[2] <- "Bone Marrow Stromal Cells"
ec_kinases <- read.csv("data/kinases/EC_Kinases.csv")
ec_kinases <- subset(ec_kinases, Hypergeometric.p.value < 0.05)
ec_kinases <- select(ec_kinases, Protein.Kinase, Hypergeometric.p.value)
ec_kinases$log10_p_value <- -log10(ec_kinases$Hypergeometric.p.value)
ec_kinases$Hypergeometric.p.value <- NULL
colnames(ec_kinases)[2] <- "Endothelial Cells"
ocy_kinases <- read.csv("data/kinases/OCY_Kinases.csv")
ocy_kinases <- subset(ocy_kinases, Hypergeometric.p.value < 0.05)
ocy_kinases <- select(ocy_kinases, Protein.Kinase, Hypergeometric.p.value)
ocy_kinases$log10_p_value <- -log10(ocy_kinases$Hypergeometric.p.value)
ocy_kinases$Hypergeometric.p.value <- NULL
colnames(ocy_kinases)[2] <- "Osteocytes"
adcy_kinases <- read.csv("data/kinases/adcy_Kinases.csv")
adcy_kinases <- subset(adcy_kinases, Hypergeometric.p.value < 0.05)
adcy_kinases <- select(adcy_kinases, Protein.Kinase, Hypergeometric.p.value)
adcy_kinases$log10_p_value <- -log10(adcy_kinases$Hypergeometric.p.value)
adcy_kinases$Hypergeometric.p.value <- NULL
colnames(adcy_kinases)[2] <- "Adipocytes"
mp_kinases <- read.csv("data/kinases/MP_kinases.csv")
mp_kinases <- subset(mp_kinases, Hypergeometric.p.value < 0.05)
mp_kinases <- select(mp_kinases, Protein.Kinase, Hypergeometric.p.value)
mp_kinases$log10_p_value <- -log10(mp_kinases$Hypergeometric.p.value)
mp_kinases$Hypergeometric.p.value <- NULL
colnames(mp_kinases)[2] <- "Macrophages"
treg_kinases <- read.csv("data/kinases/treg_kinases.csv")
treg_kinases <- subset(treg_kinases, Hypergeometric.p.value < 0.05)
treg_kinases <- select(treg_kinases, Protein.Kinase, Hypergeometric.p.value)
treg_kinases$log10_p_value <- -log10(treg_kinases$Hypergeometric.p.value)
treg_kinases$Hypergeometric.p.value <- NULL
colnames(treg_kinases)[2] <- "Regulatory T Cells"
wbm_kinases <- read.csv("data/kinases/wbm_kinases.csv")
wbm_kinases <- subset(wbm_kinases, Hypergeometric.p.value < 0.05)
wbm_kinases <- select(wbm_kinases, Protein.Kinase, Hypergeometric.p.value)
wbm_kinases$log10_p_value <- -log10(wbm_kinases$Hypergeometric.p.value)
wbm_kinases$Hypergeometric.p.value <- NULL
colnames(wbm_kinases)[2] <- "Whole Bone Marrow"
## merge datasets
kinases <- list(pc_kinases, bmsc_kinases, ec_kinases, ocy_kinases, adcy_kinases,mp_kinases,treg_kinases,wbm_kinases)
kinases <- Reduce(function(x, y) merge(x, y, all=TRUE), kinases)
kinases$sum.na <- rowSums(is.na(kinases))
hist(kinases$sum.na)
kinases <- kinases[kinases$sum.na < 1,]
kinases$sum.na <- NULL
kinases$mean <- rowMeans(kinases[,c(2:9)])
kinases <- kinases[order(kinases$mean),]
kinases$Protein.Kinase <- reorder.factor(kinases$Protein.Kinase, new.order=kinases$Protein.Kinase)
kinases <- kinases %>%
arrange(Protein.Kinase)
kinases$mean <- NULL
kinases_long <- melt(setDT(kinases), id.vars = c("Protein.Kinase"), variable.name = "Cell")
colnames(kinases_long)[3] <- "log10_p_value"
cells_kinases_dot_plot <-
ggplot(kinases_long, aes(x= Cell, y = Protein.Kinase, size = log10_p_value)) +
geom_point(colour="grey") +
scale_size_continuous(range = c(1,6), limits = c(1,30), breaks = c(1,10,30)) +
theme_classic() +
xlab("") +
ylab("") +
theme(plot.title = element_text(size = 15)) +
ggtitle("") +
theme(axis.title = element_text(size=12)) +
theme(axis.text.x = element_text( color="#000000", size=12, angle=90, hjust = 0.95, vjust = 0.4),
axis.text.y = element_text( color="#000000", size=12)) +
theme( axis.line = element_line(colour = "#000000", linewidth = 0.5, linetype = "solid")) +
labs(size=expression("-log"['10']*"P-value")) +
theme(legend.title = element_text(colour="#000000", size=12)) +
theme(legend.position="right")
cells_kinases_dot_plot
cells_kinases_dot_plot <-
ggplot(kinases_long, aes(x= Cell, y = Protein.Kinase, size = log10_p_value)) +
geom_point(colour="grey") +
scale_size_continuous(range = c(1,6), limits = c(1,30), breaks = c(1,10,30)) +
theme_classic() +
xlab("") +
ylab("") +
theme(plot.title = element_text(size = 15)) +
ggtitle("") +
theme(axis.title = element_text(size=12)) +
theme(axis.text.x = element_text( color="#000000", size=12, angle=90, hjust = 0.95, vjust = 0.4),
axis.text.y = element_text( color="#000000", size=12)) +
theme( axis.line = element_line(colour = "#000000", linewidth = 0.5, linetype = "solid")) +
labs(size=expression("-log"['10']*"p-value")) +
theme(legend.title = element_text(colour="#000000", size=12)) +
theme(legend.position="right")
cells_kinases_dot_plot
cells_kinases_dot_plot <-
ggplot(kinases_long, aes(x= Cell, y = Protein.Kinase, size = log10_p_value)) +
geom_point(colour="grey") +
scale_size_continuous(range = c(1,6), limits = c(1,30), breaks = c(1,10,30)) +
theme_classic() +
xlab("") +
ylab("") +
#theme(plot.title = element_text(size = 15)) +
ggtitle("") +
theme(axis.title = element_text(size=14)) +
theme(axis.text.x = element_text( color="#000000", size=14, angle=90, hjust = 0.95, vjust = 0.4),
axis.text.y = element_text( color="#000000", size=14)) +
theme( axis.line = element_line(colour = "#000000", linewidth = 0.5, linetype = "solid")) +
labs(size=expression("-log"['10']*"p-value")) +
theme(legend.title = element_text(colour="#000000", size=12)) +
theme(legend.position="right")
cells_kinases_dot_plot
cells_kinases_dot_plot <-
ggplot(kinases_long, aes(x= Cell, y = Protein.Kinase, size = log10_p_value)) +
geom_point(colour="grey") +
scale_size_continuous(range = c(1,6), limits = c(1,30), breaks = c(1,10,30)) +
theme_classic() +
xlab("") +
ylab("") +
#theme(plot.title = element_text(size = 15)) +
ggtitle("") +
theme(axis.title = element_text(size=14)) +
theme(axis.text.x = element_text( color="#000000", size=14, angle=90, hjust = 0.95, vjust = 0.4),
axis.text.y = element_text( color="#000000", size=14)) +
theme( axis.line = element_line(colour = "#000000", linewidth = 0.5, linetype = "solid")) +
labs(size=expression("-log"['10']*"p-value")) +
theme(legend.title = element_text(colour="#000000", size=14)) +
theme(legend.position="right")
cells_kinases_dot_plot
cells_kinases_dot_plot <-
ggplot(kinases_long, aes(x= Cell, y = Protein.Kinase, size = log10_p_value)) +
geom_point(colour="grey") +
scale_size_continuous(range = c(1,6), limits = c(1,30), breaks = c(1,10,30)) +
theme_classic() +
xlab("") +
ylab("") +
#theme(plot.title = element_text(size = 15)) +
ggtitle("") +
theme(axis.title = element_text(size=14)) +
theme(axis.text.x = element_text( color="#000000", size=14, angle=90, hjust = 0.95, vjust = 0.4),
axis.text.y = element_text( color="#000000", size=14)) +
theme( axis.line = element_line(colour = "#000000", linewidth = 0.5, linetype = "solid")) +
labs(size=expression("-log"['10']*" p-value")) +
theme(legend.title = element_text(colour="#000000", size=14)) +
theme(legend.position="right")
cells_kinases_dot_plot
## load data
pc_tf <- read.csv("data/tf/PC_tf.csv")
pc_tf <- subset(pc_tf, Hypergeometric.p.value < 0.05)
pc_tf <- select(pc_tf, Transcription.Factor, Hypergeometric.p.value)
colnames(pc_tf)[1] <- "Plasma Cells"
pc_tf <- pc_tf[1]
#write.csv(pc_tf,"data/tf/PC_tf.csv", row.names = FALSE)
pc_tf <- as.vector(pc_tf)
bmsc_tf <- read.csv("data/tf/BMSC_tf.csv")
bmsc_tf <- subset(bmsc_tf, Hypergeometric.p.value < 0.05)
bmsc_tf <- select(bmsc_tf, Transcription.Factor, Hypergeometric.p.value)
colnames(bmsc_tf)[1] <- "Bone Marrow Stromal Cells"
bmsc_tf <- bmsc_tf[1]
#write.csv(bmsc_tf,"data/tf/bmsc_tf.csv", row.names = FALSE)
bmsc_tf <- as.vector(bmsc_tf)
ec_tf <- read.csv("data/tf/EC_tf.csv")
ec_tf <- subset(ec_tf, Hypergeometric.p.value < 0.05)
ec_tf <- select(ec_tf, Transcription.Factor, Hypergeometric.p.value)
colnames(ec_tf)[1] <- "Endothelial Cells"
## load data
pc_tf <- read.csv("data/tf/PC_tf.csv")
pc_tf <- subset(pc_tf, Hypergeometric.p.value < 0.05)
pc_tf <- select(pc_tf, Transcription.Factor, Hypergeometric.p.value)
pc_tf$log10_p_value <- -log10(pc_tf$Hypergeometric.p.value)
pc_tf$Hypergeometric.p.value <- NULL
colnames(pc_tf)[2] <- "Plasma Cells"
bmsc_tf <- read.csv("data/tf/BMSC_tf.csv")
bmsc_tf <- subset(bmsc_tf, Hypergeometric.p.value < 0.05)
bmsc_tf <- select(bmsc_tf, Transcription.Factor, Hypergeometric.p.value)
bmsc_tf$log10_p_value <- -log10(bmsc_tf$Hypergeometric.p.value)
bmsc_tf$Hypergeometric.p.value <- NULL
colnames(bmsc_tf)[2] <- "Bone Marrow Stromal Cells"
ec_tf <- read.csv("data/tf/EC_tf.csv")
ec_tf <- subset(ec_tf, Hypergeometric.p.value < 0.05)
ec_tf <- select(ec_tf, Transcription.Factor, Hypergeometric.p.value)
ec_tf$log10_p_value <- -log10(ec_tf$Hypergeometric.p.value)
ec_tf$Hypergeometric.p.value <- NULL
colnames(ec_tf)[2] <- "Endothelial Cells"
ocy_tf <- read.csv("data/tf/OCY_tf.csv")
ocy_tf <- subset(ocy_tf, Hypergeometric.p.value < 0.05)
ocy_tf <- select(ocy_tf, Transcription.Factor, Hypergeometric.p.value)
ocy_tf$log10_p_value <- -log10(ocy_tf$Hypergeometric.p.value)
ocy_tf$Hypergeometric.p.value <- NULL
colnames(ocy_tf)[2] <- "Osteocytes"
adcy_tf <- read.csv("data/tf/adcy_tf.csv")
adcy_tf <- subset(adcy_tf, Hypergeometric.p.value < 0.05)
adcy_tf <- select(adcy_tf, Transcription.Factor, Hypergeometric.p.value)
adcy_tf$log10_p_value <- -log10(adcy_tf$Hypergeometric.p.value)
adcy_tf$Hypergeometric.p.value <- NULL
colnames(adcy_tf)[2] <- "Adipocytes"
mp_tf <- read.csv("data/tf/MP_tf.csv")
mp_tf <- subset(mp_tf, Hypergeometric.p.value < 0.05)
mp_tf <- select(mp_tf, Transcription.Factor, Hypergeometric.p.value)
mp_tf$log10_p_value <- -log10(mp_tf$Hypergeometric.p.value)
mp_tf$Hypergeometric.p.value <- NULL
colnames(mp_tf)[2] <- "Macrophages"
treg_tf <- read.csv("data/tf/treg_tf.csv")
treg_tf <- subset(treg_tf, Hypergeometric.p.value < 0.05)
treg_tf <- select(treg_tf, Transcription.Factor, Hypergeometric.p.value)
treg_tf$log10_p_value <- -log10(treg_tf$Hypergeometric.p.value)
treg_tf$Hypergeometric.p.value <- NULL
treg_tf <- treg_tf %>%
group_by(Transcription.Factor) %>%
slice_max(order_by = log10_p_value) %>% as.data.frame()
colnames(treg_tf)[2] <- "Regulatory T Cells"
wbm_tf <- read.csv("data/tf/wbm_tf.csv")
wbm_tf <- subset(wbm_tf, Hypergeometric.p.value < 0.05)
wbm_tf <- select(wbm_tf, Transcription.Factor, Hypergeometric.p.value)
wbm_tf$log10_p_value <- -log10(wbm_tf$Hypergeometric.p.value)
wbm_tf$Hypergeometric.p.value <- NULL
colnames(wbm_tf)[2] <- "Whole Bone Marrow"
## merge datasets
tf <- list(pc_tf, bmsc_tf, ec_tf, ocy_tf, adcy_tf,mp_tf,treg_tf,wbm_tf)
tf <- Reduce(function(x, y) merge(x, y, all=TRUE), tf)
tf$sum.na <- rowSums(is.na(tf))
hist(tf$sum.na)
#tf <- tf[tf$sum.na < 7,]
tf$sum.na <- NULL
tf[is.na(tf)] <- 0
tf$mean <- rowMeans(tf[,c(2:9)])
tf <- tf[order(tf$mean),]
tf$Transcription.Factor <- reorder.factor(tf$Transcription.Factor, new.order=tf$Transcription.Factor)
tf <- tf %>%
arrange(Transcription.Factor)
tf$mean <- NULL
tf_long <- melt(setDT(tf), id.vars = c("Transcription.Factor"), variable.name = "Cell")
colnames(tf_long)[3] <- "log10_p_value"
tf_long[tf_long==0] <- NA
tf_long<-tf_long[complete.cases(tf_long),]
cells_tf_dot_plot <-
ggplot(tf_long, aes(x= Cell, y = Transcription.Factor, size = log10_p_value)) +
geom_point(colour="grey") +
scale_size_continuous(range = c(1,6), limits = c(1,30), breaks = c(1,10,30)) +
theme_classic() +
xlab("") +
ylab("") +
#theme(plot.title = element_text(size = 15)) +
ggtitle("") +
theme(axis.title = element_text(size=14)) +
theme(axis.text.x = element_text( color="#000000", size=14, angle=90, hjust = 0.95, vjust = 0.4),
axis.text.y = element_text( color="#000000", size=14)) +
theme( axis.line = element_line(colour = "#000000", linewidth = 0.5, linetype = "solid")) +
labs(size=expression("-log"['10']*" p-value")) +
theme(legend.title = element_text(colour="#000000", size=14)) +
theme(legend.position="none")
cells_tf_dot_plot
tiff("results/cells_kinases_tf_plot.tiff", units="in", width=10, height=15, res=300)
cells_kinases_tf_plot <- plot_grid(cells_tf_dot_plot, NULL, cells_kinases_dot_plot,
rel_widths=c(1,0.2,1.5),nrow=1, align = "h",axis = "b")
cells_kinases_tf_plot
dev.off()
tiff("results/cells_kinases_tf_plot.tiff", units="in", width=10, height=15, res=300)
cells_kinases_tf_plot <- plot_grid(cells_tf_dot_plot, NULL, cells_kinases_dot_plot,
rel_widths=c(1,0.2,1.7),nrow=1, align = "h",axis = "b")
cells_kinases_tf_plot
dev.off()
tiff("results/cells_kinases_tf_plot.tiff", units="in", width=10, height=15, res=300)
cells_kinases_tf_plot <- plot_grid(cells_tf_dot_plot, NULL, cells_kinases_dot_plot,
rel_widths=c(1,0.2,1.5),nrow=1, align = "h",axis = "b")
cells_kinases_tf_plot
dev.off()
tiff("results/cells_kinases_tf_plot.tiff", units="in", width=10, height=15, res=300)
cells_kinases_tf_plot <- plot_grid(cells_tf_dot_plot, NULL, cells_kinases_dot_plot,
rel_widths=c(1,0.2,1.3),nrow=1, align = "h",axis = "b")
cells_kinases_tf_plot
dev.off()
tiff("results/cells_kinases_tf_plot.tiff", units="in", width=10, height=15, res=300)
cells_kinases_tf_plot <- plot_grid(cells_tf_dot_plot, NULL, cells_kinases_dot_plot,
rel_widths=c(1,0.2,1.4),nrow=1, align = "h",axis = "b")
cells_kinases_tf_plot
dev.off()
tiff("results/cells_kinases_tf_plot.tiff", units="in", width=10, height=15, res=300)
cells_kinases_tf_plot <- plot_grid(cells_tf_dot_plot, NULL, cells_kinases_dot_plot,
rel_widths=c(1,0.2,1.45),nrow=1, align = "h",axis = "b")
cells_kinases_tf_plot
dev.off()
tiff("results/cells_kinases_tf_plot.tiff", units="in", width=10, height=15, res=300)
cells_kinases_tf_plot <- plot_grid(cells_tf_dot_plot, NULL, cells_kinases_dot_plot,
rel_widths=c(1,0.2,1.6),nrow=1, align = "h",axis = "b")
cells_kinases_tf_plot
dev.off()
tiff("results/cells_kinases_tf_plot.tiff", units="in", width=10, height=15, res=300)
cells_kinases_tf_plot <- plot_grid(cells_tf_dot_plot, NULL, cells_kinases_dot_plot,
rel_widths=c(1.1,0.2,1.6),nrow=1, align = "h",axis = "b")
cells_kinases_tf_plot
dev.off()
tiff("results/cells_kinases_tf_plot.tiff", units="in", width=10, height=15, res=300)
cells_kinases_tf_plot <- plot_grid(cells_tf_dot_plot, NULL, cells_kinases_dot_plot,
rel_widths=c(1.1,0.2,1.7),nrow=1, align = "h",axis = "b")
cells_kinases_tf_plot
dev.off()
setwd("~/Work/PhD/Projects/Comput MM Pain/Computational Analysis/Dot_Plot")
# set working directory
setwd("~/Work/PhD/Projects/Comput MM Pain/Computational Analysis/Dot_Plot")
# load packages
library(data.table)
library(stats)
library(tidyverse)
library(reshape2)
library(readxl)
library(GeneOverlap)
library(plotly)
library(ggdendro)
library(gdata)
library(cowplot)
mm_cells_order <- c("Plasma Cells","Bone Marrow Stromal Cells", "Endothelial Cellss", "Osteocytess","Osteogenic Precursor Cells",
"Adipocytess", "Natural Killer Cells", "Neutrophils", "Macrophagess",
"Regulatory T Cellss", "Hematopoietic Stem Cells","Whole Bone Marrow")
## load data
pc_kinases <- read.csv("data/kinases/PC_Kinases.csv")
pc_kinases <- subset(pc_kinases, Hypergeometric.p.value < 0.05)
pc_kinases <- select(pc_kinases, Protein.Kinase, Hypergeometric.p.value)
pc_kinases$log10_p_value <- -log10(pc_kinases$Hypergeometric.p.value)
pc_kinases$Hypergeometric.p.value <- NULL
colnames(pc_kinases)[2] <- "Plasma Cells"
bmsc_kinases <- read.csv("data/kinases/BMSC_Kinases.csv")
bmsc_kinases <- subset(bmsc_kinases, Hypergeometric.p.value < 0.05)
bmsc_kinases <- select(bmsc_kinases, Protein.Kinase, Hypergeometric.p.value)
bmsc_kinases$log10_p_value <- -log10(bmsc_kinases$Hypergeometric.p.value)
bmsc_kinases$Hypergeometric.p.value <- NULL
colnames(bmsc_kinases)[2] <- "Bone Marrow Stromal Cells"
ec_kinases <- read.csv("data/kinases/EC_Kinases.csv")
ec_kinases <- subset(ec_kinases, Hypergeometric.p.value < 0.05)
ec_kinases <- select(ec_kinases, Protein.Kinase, Hypergeometric.p.value)
ec_kinases$log10_p_value <- -log10(ec_kinases$Hypergeometric.p.value)
ec_kinases$Hypergeometric.p.value <- NULL
colnames(ec_kinases)[2] <- "Endothelial Cells"
ocy_kinases <- read.csv("data/kinases/OCY_Kinases.csv")
ocy_kinases <- subset(ocy_kinases, Hypergeometric.p.value < 0.05)
ocy_kinases <- select(ocy_kinases, Protein.Kinase, Hypergeometric.p.value)
ocy_kinases$log10_p_value <- -log10(ocy_kinases$Hypergeometric.p.value)
ocy_kinases$Hypergeometric.p.value <- NULL
colnames(ocy_kinases)[2] <- "Osteocytes"
mp_kinases <- read.csv("data/kinases/MP_kinases.csv")
mp_kinases <- subset(mp_kinases, Hypergeometric.p.value < 0.05)
mp_kinases <- select(mp_kinases, Protein.Kinase, Hypergeometric.p.value)
mp_kinases$log10_p_value <- -log10(mp_kinases$Hypergeometric.p.value)
mp_kinases$Hypergeometric.p.value <- NULL
colnames(mp_kinases)[2] <- "Macrophages"
treg_kinases <- read.csv("data/kinases/treg_kinases.csv")
treg_kinases <- subset(treg_kinases, Hypergeometric.p.value < 0.05)
treg_kinases <- select(treg_kinases, Protein.Kinase, Hypergeometric.p.value)
treg_kinases$log10_p_value <- -log10(treg_kinases$Hypergeometric.p.value)
treg_kinases$Hypergeometric.p.value <- NULL
colnames(treg_kinases)[2] <- "Regulatory T Cells"
wbm_kinases <- read.csv("data/kinases/wbm_kinases.csv")
wbm_kinases <- subset(wbm_kinases, Hypergeometric.p.value < 0.05)
wbm_kinases <- select(wbm_kinases, Protein.Kinase, Hypergeometric.p.value)
wbm_kinases$log10_p_value <- -log10(wbm_kinases$Hypergeometric.p.value)
wbm_kinases$Hypergeometric.p.value <- NULL
colnames(wbm_kinases)[2] <- "Whole Bone Marrow"
## merge datasets
kinases <- list(pc_kinases, bmsc_kinases, ec_kinases, ocy_kinases, adcy_kinases,mp_kinases,treg_kinases,wbm_kinases)
kinases <- Reduce(function(x, y) merge(x, y, all=TRUE), kinases)
kinases$sum.na <- rowSums(is.na(kinases))
## merge datasets
kinases <- list(pc_kinases, bmsc_kinases, ec_kinases, ocy_kinases,mp_kinases,treg_kinases,wbm_kinases)
kinases <- Reduce(function(x, y) merge(x, y, all=TRUE), kinases)
kinases$sum.na <- rowSums(is.na(kinases))
hist(kinases$sum.na)
kinases <- kinases[kinases$sum.na < 1,]
kinases$sum.na <- NULL
kinases$mean <- rowMeans(kinases[,c(2:9)])
kinases$mean <- rowMeans(kinases[,c(2:8)])
kinases <- kinases[order(kinases$mean),]
kinases$Protein.Kinase <- reorder.factor(kinases$Protein.Kinase, new.order=kinases$Protein.Kinase)
kinases <- kinases %>%
arrange(Protein.Kinase)
kinases$mean <- NULL
kinases_long <- melt(setDT(kinases), id.vars = c("Protein.Kinase"), variable.name = "Cell")
colnames(kinases_long)[3] <- "log10_p_value"
tiff("results/cells_kinases_dot_plot.tiff", units="in", width=8, height=15, res=100)
cells_kinases_dot_plot <-
ggplot(kinases_long, aes(x= Cell, y = Protein.Kinase, size = log10_p_value)) +
geom_point(colour="grey") +
scale_size_continuous(range = c(1,6), limits = c(1,30), breaks = c(1,10,30)) +
theme_classic() +
xlab("") +
ylab("") +
#theme(plot.title = element_text(size = 15)) +
ggtitle("") +
theme(axis.title = element_text(size=14)) +
theme(axis.text.x = element_text( color="#000000", size=14, angle=90, hjust = 0.95, vjust = 0.4),
axis.text.y = element_text( color="#000000", size=14)) +
theme( axis.line = element_line(colour = "#000000", linewidth = 0.5, linetype = "solid")) +
labs(size=expression("-log"['10']*" p-value")) +
theme(legend.title = element_text(colour="#000000", size=14)) +
theme(legend.position="right")
cells_kinases_dot_plot
dev.off()
## load data
pc_tf <- read.csv("data/tf/PC_tf.csv")
pc_tf <- subset(pc_tf, Hypergeometric.p.value < 0.05)
pc_tf <- select(pc_tf, Transcription.Factor, Hypergeometric.p.value)
pc_tf$log10_p_value <- -log10(pc_tf$Hypergeometric.p.value)
pc_tf$Hypergeometric.p.value <- NULL
colnames(pc_tf)[2] <- "Plasma Cells"
bmsc_tf <- read.csv("data/tf/BMSC_tf.csv")
bmsc_tf <- subset(bmsc_tf, Hypergeometric.p.value < 0.05)
bmsc_tf <- select(bmsc_tf, Transcription.Factor, Hypergeometric.p.value)
bmsc_tf$log10_p_value <- -log10(bmsc_tf$Hypergeometric.p.value)
bmsc_tf$Hypergeometric.p.value <- NULL
colnames(bmsc_tf)[2] <- "Bone Marrow Stromal Cells"
ec_tf <- read.csv("data/tf/EC_tf.csv")
ec_tf <- subset(ec_tf, Hypergeometric.p.value < 0.05)
ec_tf <- select(ec_tf, Transcription.Factor, Hypergeometric.p.value)
ec_tf$log10_p_value <- -log10(ec_tf$Hypergeometric.p.value)
ec_tf$Hypergeometric.p.value <- NULL
colnames(ec_tf)[2] <- "Endothelial Cells"
ocy_tf <- read.csv("data/tf/OCY_tf.csv")
ocy_tf <- subset(ocy_tf, Hypergeometric.p.value < 0.05)
ocy_tf <- select(ocy_tf, Transcription.Factor, Hypergeometric.p.value)
ocy_tf$log10_p_value <- -log10(ocy_tf$Hypergeometric.p.value)
ocy_tf$Hypergeometric.p.value <- NULL
colnames(ocy_tf)[2] <- "Osteocytes"
mp_tf <- read.csv("data/tf/MP_tf.csv")
mp_tf <- subset(mp_tf, Hypergeometric.p.value < 0.05)
mp_tf <- select(mp_tf, Transcription.Factor, Hypergeometric.p.value)
mp_tf$log10_p_value <- -log10(mp_tf$Hypergeometric.p.value)
mp_tf$Hypergeometric.p.value <- NULL
colnames(mp_tf)[2] <- "Macrophages"
treg_tf <- read.csv("data/tf/treg_tf.csv")
treg_tf <- subset(treg_tf, Hypergeometric.p.value < 0.05)
treg_tf <- select(treg_tf, Transcription.Factor, Hypergeometric.p.value)
treg_tf$log10_p_value <- -log10(treg_tf$Hypergeometric.p.value)
treg_tf$Hypergeometric.p.value <- NULL
treg_tf <- treg_tf %>%
group_by(Transcription.Factor) %>%
slice_max(order_by = log10_p_value) %>% as.data.frame()
colnames(treg_tf)[2] <- "Regulatory T Cells"
wbm_tf <- read.csv("data/tf/wbm_tf.csv")
wbm_tf <- subset(wbm_tf, Hypergeometric.p.value < 0.05)
wbm_tf <- select(wbm_tf, Transcription.Factor, Hypergeometric.p.value)
wbm_tf$log10_p_value <- -log10(wbm_tf$Hypergeometric.p.value)
wbm_tf$Hypergeometric.p.value <- NULL
colnames(wbm_tf)[2] <- "Whole Bone Marrow"
## merge datasets
tf <- list(pc_tf, bmsc_tf, ec_tf, ocy_tf,mp_tf,treg_tf,wbm_tf)
tf <- Reduce(function(x, y) merge(x, y, all=TRUE), tf)
tf$sum.na <- rowSums(is.na(tf))
hist(tf$sum.na)
#tf <- tf[tf$sum.na < 7,]
tf$sum.na <- NULL
tf[is.na(tf)] <- 0
tf$mean <- rowMeans(tf[,c(2:8)])
tf <- tf[order(tf$mean),]
tf$Transcription.Factor <- reorder.factor(tf$Transcription.Factor, new.order=tf$Transcription.Factor)
tf <- tf %>%
arrange(Transcription.Factor)
tf$mean <- NULL
tf_long <- melt(setDT(tf), id.vars = c("Transcription.Factor"), variable.name = "Cell")
colnames(tf_long)[3] <- "log10_p_value"
tf_long[tf_long==0] <- NA
tf_long<-tf_long[complete.cases(tf_long),]
tiff("results/cells_tf_dot_plot.tiff", units="in", width=8, height=7.25, res=100)
cells_tf_dot_plot <-
ggplot(tf_long, aes(x= Cell, y = Transcription.Factor, size = log10_p_value)) +
geom_point(colour="grey") +
scale_size_continuous(range = c(1,6), limits = c(1,30), breaks = c(1,10,30)) +
theme_classic() +
xlab("") +
ylab("") +
#theme(plot.title = element_text(size = 15)) +
ggtitle("") +
theme(axis.title = element_text(size=14)) +
theme(axis.text.x = element_text( color="#000000", size=14, angle=90, hjust = 0.95, vjust = 0.4),
axis.text.y = element_text( color="#000000", size=14)) +
theme( axis.line = element_line(colour = "#000000", linewidth = 0.5, linetype = "solid")) +
labs(size=expression("-log"['10']*" p-value")) +
theme(legend.title = element_text(colour="#000000", size=14)) +
theme(legend.position="none")
cells_tf_dot_plot
dev.off()
tiff("results/cells_kinases_tf_plot.tiff", units="in", width=10, height=15, res=300)
cells_kinases_tf_plot <- plot_grid(cells_tf_dot_plot, NULL, cells_kinases_dot_plot,
rel_widths=c(1.1,0.2,1.7),nrow=1, align = "h",axis = "b")
cells_kinases_tf_plot
dev.off()
