View(hm_sensory_neuron)
# inner merge files
HM_Sensory_Neuron <- merge(HS_Sensory_Neuron, HS_Mapped_Sensory_Neuron_MA, by = "Name")
# write file
write.csv(HM_Sensory_Neuron,file = "results/HM_Sensory_Neuron.csv")
# write file
write.csv(HM_Sensory_Neuron,file = "results/HM_Sensory_Neuron.csv", row.names = FALSE)
# setting working directory
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/hmMA")
# load files
HS_Sensory_Neuron <- read.csv("data/HS_Sensory_Neuron_MA.csv")
colnames(HS_Sensory_Neuron)[2] <-"Human_Score"
HS_Mapped_Sensory_Neuron_MA <- read.csv("data/HS_Mapped_Sensory_Neuron_MA.csv")
colnames(HS_Mapped_Sensory_Neuron_MA)[1] <-"Name"
colnames(HS_Mapped_Sensory_Neuron_MA)[2] <-"Mouse_Score"
# inner merge files
HM_Sensory_Neuron <- merge(HS_Sensory_Neuron, HS_Mapped_Sensory_Neuron_MA, by = "Name")
boxplot(HM_Sensory_Neuron$Human_Score)
hist(HM_Sensory_Neuron$Human_Score)
hist(HM_Sensory_Neuron$Mouse_Score)
# setting working directory
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/hmMA")
# load files
HS_Sensory_Neuron <- read.csv("data/HS_Sensory_Neuron_MA.csv")
colnames(HS_Sensory_Neuron)[2] <-"Human_Score"
HS_Mapped_Sensory_Neuron_MA <- read.csv("data/HS_Mapped_Sensory_Neuron_MA.csv")
colnames(HS_Mapped_Sensory_Neuron_MA)[1] <-"Name"
colnames(HS_Mapped_Sensory_Neuron_MA)[2] <-"Mouse_Score"
# inner merge files
HM_Sensory_Neuron <- merge(HS_Sensory_Neuron, HS_Mapped_Sensory_Neuron_MA, by = "Name")
# plot distribution
par(mfrow = c(1, 2))
hist(HM_Sensory_Neuron$Human_Score)
hist(HM_Sensory_Neuron$Mouse_Score)
View(HM_Sensory_Neuron)
# setting working directory
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/hmMA")
# load files
HS_Sensory_Neuron <- read.csv("data/HS_Sensory_Neuron_MA.csv")
colnames(HS_Sensory_Neuron)[2] <-"Human_Score"
HS_Mapped_Sensory_Neuron_MA <- read.csv("data/HS_Mapped_Sensory_Neuron_MA.csv")
colnames(HS_Mapped_Sensory_Neuron_MA)[1] <-"Name"
colnames(HS_Mapped_Sensory_Neuron_MA)[2] <-"Mouse_Score"
# inner merge files
HM_Sensory_Neuron <- merge(HS_Sensory_Neuron, HS_Mapped_Sensory_Neuron_MA, by = "Name")
# plot distribution
par(mfrow = c(1, 2))
hist(HM_Sensory_Neuron$Human_Score)
hist(HM_Sensory_Neuron$Mouse_Score)
View(HM_Sensory_Neuron)
colnames(HM_Sensory_Neuron)
plot(HM_Sensory_Neuron$Human_Score, HM_Sensory_Neuron$Mouse_Score, main = "Scatter plot",
xlab = "Human_Score", ylab = "Mouse_Score",
pch = 19, frame = FALSE)
par(mfrow = c(1, 1))
plot(HM_Sensory_Neuron$Human_Score, HM_Sensory_Neuron$Mouse_Score, main = "Scatter plot",
xlab = "Human_Score", ylab = "Mouse_Score",
pch = 19, frame = FALSE)
plot(HM_Sensory_Neuron$Human_Score, HM_Sensory_Neuron$Mouse_Score, main = "Scatter plot",
xlab = "Human_Score", ylab = "Mouse_Score")
# setting working directory
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/hmMA")
# load files
HS_Sensory_Neuron <- read.csv("data/HS_Sensory_Neuron_MA.csv")
colnames(HS_Sensory_Neuron)[2] <-"Human_Score"
HS_Mapped_Sensory_Neuron_MA <- read.csv("data/HS_Mapped_Sensory_Neuron_MA.csv")
colnames(HS_Mapped_Sensory_Neuron_MA)[1] <-"Name"
colnames(HS_Mapped_Sensory_Neuron_MA)[2] <-"Mouse_Score"
# inner merge files
HM_Sensory_Neuron <- merge(HS_Sensory_Neuron, HS_Mapped_Sensory_Neuron_MA, by = "Name")
# plot distribution
par(mfrow = c(1, 2))
hist(HM_Sensory_Neuron$Human_Score)
hist(HM_Sensory_Neuron$Mouse_Score)
# lollipop plot
par(mfrow = c(1, 1))
HM_Sensory_Neuron_molten <- melt(HM_Sensory_Neuron)
library(reshape2)
library(ggplot2)
HM_Sensory_Neuron_molten <- melt(HM_Sensory_Neuron)
View(HM_Sensory_Neuron_molten)
View(HM_Sensory_Neuron)
colnames(HM_Sensory_Neuron)
HM_Sensory_Neuron$Total <- HM_Sensory_Neuron$Human_Score + HM_Sensory_Neuron$Mouse_Score
for_levels <- HM_Sensory_Neuron$Cell[order(HM_Sensory_Neuron$Total)]
View(HM_Sensory_Neuron)
for_levels <- HM_Sensory_Neuron$Name[order(HM_Sensory_Neuron$Total)]
HM_Sensory_Neuron_molten$Name <- factor(HM_Sensory_Neuron_molten$Name, levels = for_levels)
View(HM_Sensory_Neuron)
sum(duplicated(HM_Sensory_Neuron$Name))
# setting working directory
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/hmMA")
# load files
HS_Sensory_Neuron <- read.csv("data/HS_Sensory_Neuron_MA.csv")
colnames(HS_Sensory_Neuron)[2] <-"Human_Score"
HS_Mapped_Sensory_Neuron_MA <- read.csv("data/HS_Mapped_Sensory_Neuron_MA.csv")
colnames(HS_Mapped_Sensory_Neuron_MA)[1] <-"Name"
colnames(HS_Mapped_Sensory_Neuron_MA)[2] <-"Mouse_Score"
# inner merge files
HM_Sensory_Neuron <- merge(HS_Sensory_Neuron, HS_Mapped_Sensory_Neuron_MA, by = "Name")
sum(duplicated(HM_Sensory_Neuron))
sum(duplicated(HM_Sensory_Neuron$Name))
# plot distribution
par(mfrow = c(1, 2))
hist(HM_Sensory_Neuron$Human_Score)
hist(HM_Sensory_Neuron$Mouse_Score)
# lollipop plot
par(mfrow = c(1, 1))
library(reshape2)
library(ggplot2)
HM_Sensory_Neuron_molten <- melt(HM_Sensory_Neuron)
HM_Sensory_Neuron$Total <- HM_Sensory_Neuron$Human_Score + HM_Sensory_Neuron$Mouse_Score
for_levels <- HM_Sensory_Neuron$Name[order(HM_Sensory_Neuron$Total)]
HM_Sensory_Neuron_molten$Name <- factor(HM_Sensory_Neuron_molten$Name, levels = for_levels)
g <- ggplot(HM_Sensory_Neuron_molten, aes(Name, value))
g <- g + geom_linerange(aes(x = Name,
ymin = 0, ymax = value,
color = variable), position = position_dodge(width = 1))
g <- g + geom_point(aes(color = variable), position = position_dodge(width = 1))
g <- g + scale_y_continuous(expand = c(0, 0))
g <- g + theme_bw()
g <- g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g
# setting working directory
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/hmMA")
# load files
HS_Sensory_Neuron <- read.csv("data/HS_Sensory_Neuron_MA.csv")
colnames(HS_Sensory_Neuron)[2] <-"Human_Score"
HS_Mapped_Sensory_Neuron_MA <- read.csv("data/HS_Mapped_Sensory_Neuron_MA.csv")
colnames(HS_Mapped_Sensory_Neuron_MA)[1] <-"Name"
colnames(HS_Mapped_Sensory_Neuron_MA)[2] <-"Mouse_Score"
# inner merge files
HM_Sensory_Neuron <- merge(HS_Sensory_Neuron, HS_Mapped_Sensory_Neuron_MA, by = "Name")
# write file
write.csv(HM_Sensory_Neuron,file = "results/HM_Sensory_Neuron.csv", row.names = FALSE)
# plot distribution
par(mfrow = c(1, 2))
hist(HM_Sensory_Neuron$Human_Score)
hist(HM_Sensory_Neuron$Mouse_Score)
# lollipop plot
par(mfrow = c(1, 1))
library(reshape2)
library(ggplot2)
HM_Sensory_Neuron_molten <- melt(HM_Sensory_Neuron)
HM_Sensory_Neuron$Total <- HM_Sensory_Neuron$Human_Score + HM_Sensory_Neuron$Mouse_Score
for_levels <- HM_Sensory_Neuron$Name[order(HM_Sensory_Neuron$Total)]
HM_Sensory_Neuron_molten$Name <- factor(HM_Sensory_Neuron_molten$Name, levels = for_levels)
g <- ggplot(HM_Sensory_Neuron_molten, aes(Name, value))
g <- g + geom_linerange(aes(x = Name,
ymin = 0, ymax = value,
color = variable), position = position_dodge(width = 1))
g <- g + geom_point(aes(color = variable), position = position_dodge(width = 1))
g <- g + scale_y_continuous(expand = c(0, 0))
g <- g + theme_bw()
g <- g + theme(axis.text.x = element_text(angle = 90, hjust = 1.5))
g
g <- g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g
# setting working directory
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory HM_Sensory_Neurona/Neuron/hmMA")
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/hmMA")
# load files
HS_Sensory_Neuron <- read.csv("HM_Sensory_Neurona/HS_Sensory_Neuron_MA.csv")
colnames(HS_Sensory_Neuron)[2] <-"Human_Score"
# setting working directory
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/hmMA")
# load files
HS_Sensory_Neuron <- read.csv("HM_Sensory_Neurona/HS_Sensory_Neuron_MA.csv")
# load files
HS_Sensory_Neuron <- read.csv("data/HM_Sensory_Neurona/HS_Sensory_Neuron_MA.csv")
# setting working directory
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/hmMA")
# load files
HS_Sensory_Neuron <- read.csv("data/HS_Sensory_Neuron_MA.csv")
colnames(HS_Sensory_Neuron)[2] <-"Human_Score"
HS_Mapped_Sensory_Neuron_MA <- read.csv("data/HS_Mapped_Sensory_Neuron_MA.csv")
colnames(HS_Mapped_Sensory_Neuron_MA)[1] <-"Name"
colnames(HS_Mapped_Sensory_Neuron_MA)[2] <-"Mouse_Score"
# inner merge files
HM_Sensory_Neuron <- merge(HS_Sensory_Neuron, HS_Mapped_Sensory_Neuron_MA, by = "Name")
# plot distribution
par(mfrow = c(1, 2))
hist(HM_Sensory_Neuron$Human_Score)
hist(HM_Sensory_Neuron$Mouse_Score)
# overlayed stacked bar plot
par(mfrow = c(1, 1))
HM_Sensory_Neuron <- HM_Sensory_Neuron[order(-HM_Sensory_Neuron$Score), ]
str(HM_Sensory_Neuron)
View(HM_Sensory_Neuron)
HM_Sensory_Neuron <- HM_Sensory_Neuron[order(-HM_Sensory_Neuron$Human_Score, HM_Sensory_Neuron$Mouse_Score), ]
HM_Sensory_Neuron <- HM_Sensory_Neuron[order(-HM_Sensory_Neuron$Human_Score, -HM_Sensory_Neuron$Mouse_Score), ]
HM_Sensory_Neuron <- HM_Sensory_Neuron[order(HM_Sensory_Neuron$Human_Score, HM_Sensory_Neuron$Mouse_Score), ]
require(ggplot2)
require(reshape2)
HM_Sensory_Neuron_m <- melt(HM_Sensory_Neuron)
ggplot(HM_Sensory_Neuron_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "identity", alpha=.3) +
xlab("Gene Symbol") + ylab("Score")
HM_Sensory_Neuron_filtered <- HM_Sensory_Neuron[HM_Sensory_Neuron$Mouse_Score <= 0.05, ]
View(HM_Sensory_Neuron_filtered)
HM_Sensory_Neuron_filtered <- HM_Sensory_Neuron[HM_Sensory_Neuron$Mouse_Score <= 0.05, ]
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "identity", alpha=.3) +
xlab("Gene Symbol") + ylab("Score")
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "identity", alpha=0.5) +
xlab("Gene Symbol") + ylab("Score")
HM_Sensory_Neuron_filtered <- df[1:2000,]
require(ggplot2)
require(reshape2)
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "identity", alpha=0.5) +
xlab("Gene Symbol") + ylab("Score")
HM_Sensory_Neuron_filtered <- HM_Sensory_Neuron_filtered[1:2000,]
HM_Sensory_Neuron_filtered <- HM_Sensory_Neuron[1:2000,]
require(ggplot2)
require(reshape2)
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "identity", alpha=0.5) +
xlab("Gene Symbol") + ylab("Score")
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge", alpha=0.5) +
xlab("Gene Symbol") + ylab("Score")
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Gene Symbol") + ylab("Score")
HM_Sensory_Neuron_filtered <- HM_Sensory_Neuron[2000:5000,]
HM_Sensory_Neuron_filtered <- HM_Sensory_Neuron[2001:5000,]
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Gene Symbol") + ylab("Score")
HM_Sensory_Neuron_filtered <- HM_Sensory_Neuron[5001:7000,]
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Gene Symbol") + ylab("Score")
HM_Sensory_Neuron_filtered <- HM_Sensory_Neuron[1001:12000,]
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Gene Symbol") + ylab("Score")
# setting working directory
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/hmMA")
# load files
HS_Sensory_Neuron <- read.csv("data/HS_Sensory_Neuron_MA.csv")
colnames(HS_Sensory_Neuron)[2] <-"Human_Score"
HS_Mapped_Sensory_Neuron_MA <- read.csv("data/HS_Mapped_Sensory_Neuron_MA.csv")
colnames(HS_Mapped_Sensory_Neuron_MA)[1] <-"Name"
colnames(HS_Mapped_Sensory_Neuron_MA)[2] <-"Mouse_Score"
# inner merge files
HM_Sensory_Neuron <- merge(HS_Sensory_Neuron, HS_Mapped_Sensory_Neuron_MA, by = "Name")
# plot distribution
par(mfrow = c(1, 2))
hist(HM_Sensory_Neuron$Human_Score)
hist(HM_Sensory_Neuron$Mouse_Score)
# overlayed stacked bar plot (needs filtering to zoom in)
par(mfrow = c(1, 1))
require(ggplot2)
require(reshape2)
HM_Sensory_Neuron <- HM_Sensory_Neuron[order(HM_Sensory_Neuron$Human_Score, HM_Sensory_Neuron$Mouse_Score), ]
HM_Sensory_Neuron_filtered <- HM_Sensory_Neuron[10001:12000,]
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Gene Symbol") + ylab("Score")
View(HM_Sensory_Neuron)
HM_Sensory_Neuron <- HM_Sensory_Neuron[order(HM_Sensory_Neuron$Name), ]
View(HM_Sensory_Neuron)
HM_Sensory_Neuron_filtered <- HM_Sensory_Neuron[1:2000,]
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Gene Symbol") + ylab("Score")
HM_Sensory_Neuron_filtered <- HM_Sensory_Neuron[1:200,]
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Gene Symbol") + ylab("Score")
HM_Sensory_Neuron_filtered <- HM_Sensory_Neuron[1:20,]
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Gene Symbol") + ylab("Score")
HM_Sensory_Neuron_filtered <- HM_Sensory_Neuron[20:50,]
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Gene Symbol") + ylab("Score")
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "identity") +
xlab("Gene Symbol") + ylab("Score")
HM_Sensory_Neuron_filtered <- HM_Sensory_Neuron[20:100,]
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "identity") +
xlab("Gene Symbol") + ylab("Score")
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "identity",alpha=.3) +
xlab("Gene Symbol") + ylab("Score")
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "identity", alpha=0.3) +
xlab("Gene Symbol") + ylab("Score")
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge", alpha = 0.3) +
xlab("Gene Symbol") + ylab("Score")
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "identity", alpha = 0.3) +
xlab("Gene Symbol") + ylab("Score")
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "identity", alpha = 0.8) +
xlab("Gene Symbol") + ylab("Score")
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_line(stat = "bin") +
xlab("Gene Symbol") + ylab("Score")
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_line(stat = "bin",, binwidth=10) +
xlab("Gene Symbol") + ylab("Score")
ggplot(data=HM_Sensory_Neuron_filtered_m, aes(Name)) + geom_line(aes(fill=..count..), stat="bin", binwidth=10).
ggplot(data=HM_Sensory_Neuron_filtered_m, aes(Name)) + geom_line(aes(fill=..count..), stat="bin", binwidth=10)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_line(stat = "bin", binwidth=10) +
xlab("Gene Symbol") + ylab("Score")
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_line(aes(fill=..count..), stat = "bin", binwidth=10) +
xlab("Gene Symbol") + ylab("Score")
# setting working directory
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/hmMA")
# load files
HS_Sensory_Neuron <- read.csv("data/HS_Sensory_Neuron_MA.csv")
colnames(HS_Sensory_Neuron)[2] <-"Human_Score"
HS_Mapped_Sensory_Neuron_MA <- read.csv("data/HS_Mapped_Sensory_Neuron_MA.csv")
colnames(HS_Mapped_Sensory_Neuron_MA)[1] <-"Name"
colnames(HS_Mapped_Sensory_Neuron_MA)[2] <-"Mouse_Score"
# inner merge files
HM_Sensory_Neuron <- merge(HS_Sensory_Neuron, HS_Mapped_Sensory_Neuron_MA, by = "Name")
# plot distribution
par(mfrow = c(1, 2))
hist(HM_Sensory_Neuron$Human_Score)
hist(HM_Sensory_Neuron$Mouse_Score)
#  overlayed  bar plot (needs filtering to zoom in)
par(mfrow = c(1, 1))
require(ggplot2)
require(reshape2)
HM_Sensory_Neuron <- HM_Sensory_Neuron[order(HM_Sensory_Neuron$Name), ]
HM_Sensory_Neuron_filtered <- HM_Sensory_Neuron[20:100,]
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "identity", alpha = 0.75) +
xlab("Gene Symbol") + ylab("Score")
# line plot
HM_Sensory_Neuron_filtered$Name <- as.numeric(as.factor(HM_Sensory_Neuron_filtered$Name))
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered ,  id.vars = 'Name', variable.name = 'series')
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value)) +
geom_line(aes(colour = series))
# inner merge files
HM_Sensory_Neuron <- merge(HS_Sensory_Neuron, HS_Mapped_Sensory_Neuron_MA, by = "Name")
HM_Sensory_Neuron <- HM_Sensory_Neuron[order(HM_Sensory_Neuron$Human_Score), ]
HM_Sensory_Neuron_filtered <- HM_Sensory_Neuron[20:100,]
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "identity", alpha = 0.75) +
xlab("Gene Symbol") + ylab("Score")
# line plot
HM_Sensory_Neuron_filtered$Name <- as.numeric(as.factor(HM_Sensory_Neuron_filtered$Name))
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered ,  id.vars = 'Name', variable.name = 'series')
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value)) +
geom_line(aes(colour = series))
HM_Sensory_Neuron_filtered <- HM_Sensory_Neuron[201:300,]
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "identity", alpha = 0.75) +
xlab("Gene Symbol") + ylab("Score")
# line plot
HM_Sensory_Neuron_filtered$Name <- as.numeric(as.factor(HM_Sensory_Neuron_filtered$Name))
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered ,  id.vars = 'Name', variable.name = 'series')
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value)) +
geom_line(aes(colour = series))
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value)) +
geom_line(aes(colour = series)) +  ylim(0, 0.06)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value)) +
geom_line(aes(colour = series))
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value)) +
geom_line(aes(colour = series)) +  ylim(0, 0.06)
HM_Sensory_Neuron_filtered <- HM_Sensory_Neuron[301:400,]
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "identity", alpha = 0.75) +
xlab("Gene Symbol") + ylab("Score")
# line plot
HM_Sensory_Neuron_filtered$Name <- as.numeric(as.factor(HM_Sensory_Neuron_filtered$Name))
HM_Sensory_Neuron_filtered_m <- melt(HM_Sensory_Neuron_filtered ,  id.vars = 'Name', variable.name = 'series')
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value)) +
geom_line(aes(colour = series)) +  ylim(0, 0.06)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value)) +
geom_line(aes(colour = series))
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value)) +
geom_line(aes(colour = series)) +  ylim(0, 0.06)
ggplot(HM_Sensory_Neuron_filtered_m, aes(Name, value)) +
geom_line(aes(colour = series))
# setting working directory
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/hmMA")
# load files
HS_Sensory_Neuron_MA <- read.csv("data/HS_Sensory_Neuron_MA.csv")
colnames(HS_Sensory_Neuron_MA)[2] <-"Human_Score"
HS_Mapped_Sensory_Neuron_MA <- read.csv("data/HS_Mapped_Sensory_Neuron_MA.csv")
colnames(HS_Mapped_Sensory_Neuron_MA)[1] <-"Name"
colnames(HS_Mapped_Sensory_Neuron_MA)[2] <-"Mouse_Score"
# spearman rank correlation
HS_Sensory_Neuron_MA <- HS_Sensory_Neuron_MA[order(HS_Sensory_Neuron_MA$Human_Score), ]
HS_Mapped_Sensory_Neuron_MA <- HS_Mapped_Sensory_Neuron_MA[order(HS_Mapped_Sensory_Neuron_MA$Mouse_Score), ]
View(HS_Mapped_Sensory_Neuron_MA)
View(HS_Sensory_Neuron_MA)
cor.test(HS_Sensory_Neuron_MA$Name, HS_Mapped_Sensory_Neuron_MA$Name, method= "spearman")
# inner merge files
HM_Sensory_Neuron <- merge(HS_Sensory_Neuron_MA, HS_Mapped_Sensory_Neuron_MA, by = "Name")
View(HM_Sensory_Neuron)
# spearman rank correlation
HM_Sensory_Neuron$human_rank[HM_Sensory_Neuron.Human_Score] <- 1:nrow(HM_Sensory_Neuron)
# inner merge files
HM_Sensory_Neuron_overlapped <- merge(HS_Sensory_Neuron_MA, HS_Mapped_Sensory_Neuron_MA, by = "Name")
# spearman rank correlation
HM_Sensory_Neuron_overlapped$human_rank[order.Human_Score] <- 1:nrow(HM_Sensory_Neuron)
# spearman rank correlation
HM_Sensory_Neuron_overlapped$human_rank[order.scores] <- 1:nrow(HM_Sensory_Neuron)
# spearman rank correlation
HM_Sensory_Neuron_overlapped$human_rank[order.scores] <- 1:nrow(HM_Sensory_Neuron_overlapped)
# spearman rank correlation
HM_Sensory_Neuron_overlapped$human_rank <- NA
HM_Sensory_Neuron_overlapped$human_rank[order.scores] <- 1:nrow(HM_Sensory_Neuron_overlapped)
View(HM_Sensory_Neuron_overlapped)
# inner merge files
HM_Sensory_Neuron_overlapped <- merge(HS_Sensory_Neuron_MA, HS_Mapped_Sensory_Neuron_MA, by = "Name")
# spearman rank correlation
HM_Sensory_Neuron_overlapped$human_rank <- rank(HM_Sensory_Neuron_overlapped$Human_Score)
View(HM_Sensory_Neuron_overlapped)
HM_Sensory_Neuron_overlapped$Mouse_Score <- rank(HM_Sensory_Neuron_overlapped$Mouse_Score)
View(HM_Sensory_Neuron_overlapped)
# inner merge files
HM_Sensory_Neuron_overlapped <- merge(HS_Sensory_Neuron_MA, HS_Mapped_Sensory_Neuron_MA, by = "Name")
# spearman rank correlation
HM_Sensory_Neuron_overlapped$human_rank <- rank(HM_Sensory_Neuron_overlapped$Human_Score)
HM_Sensory_Neuron_overlapped$mouse_rank <- rank(HM_Sensory_Neuron_overlapped$Mouse_Score)
View(HM_Sensory_Neuron_overlapped)
cor.test(HM_Sensory_Neuron_overlapped$human_rank, HM_Sensory_Neuron_overlapped$mouse_rank, method= "spearman")
# setting working directory
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/hmMA")
# load files
HS_Sensory_Neuron_MA <- read.csv("data/HS_Sensory_Neuron_MA.csv")
colnames(HS_Sensory_Neuron_MA)[2] <-"Human_Score"
HS_Mapped_Sensory_Neuron_MA <- read.csv("data/HS_Mapped_Sensory_Neuron_MA.csv")
colnames(HS_Mapped_Sensory_Neuron_MA)[1] <-"Name"
colnames(HS_Mapped_Sensory_Neuron_MA)[2] <-"Mouse_Score"
# inner merge files
HM_Sensory_Neuron_overlapped <- merge(HS_Sensory_Neuron_MA, HS_Mapped_Sensory_Neuron_MA, by = "Name")
# spearman rank correlation
HM_Sensory_Neuron_overlapped$human_rank <- rank(HM_Sensory_Neuron_overlapped$Human_Score)
HM_Sensory_Neuron_overlapped$mouse_rank <- rank(HM_Sensory_Neuron_overlapped$Mouse_Score)
cor.test(HM_Sensory_Neuron_overlapped$human_rank, HM_Sensory_Neuron_overlapped$mouse_rank, method= "spearman")
View(HM_Sensory_Neuron_overlapped)
# setting working directory
setwd("~/Work/PhD/Projects/MM Pain-Bone/Computational Analysis/Sensory Data/Neuron/hmMA")
# load files
HS_Sensory_Neuron_MA <- read.csv("data/HS_Sensory_Neuron_MA.csv")
colnames(HS_Sensory_Neuron_MA)[2] <-"Human_Score"
HS_Mapped_Sensory_Neuron_MA <- read.csv("data/HS_Mapped_Sensory_Neuron_MA.csv")
colnames(HS_Mapped_Sensory_Neuron_MA)[1] <-"Name"
colnames(HS_Mapped_Sensory_Neuron_MA)[2] <-"Mouse_Score"
# inner merge files
HM_Sensory_Neuron_overlapped <- merge(HS_Sensory_Neuron_MA, HS_Mapped_Sensory_Neuron_MA, by = "Name")
View(HM_Sensory_Neuron_overlapped)
# write file
write.csv(HM_Sensory_Neuron,file = "results/HM_Sensory_Neuron.csv", row.names = FALSE)
# write file
write.csv(HM_Sensory_Neuron_overlapped,file = "results/HM_Sensory_Neuron_overlapped.csv", row.names = FALSE)
# plot distribution
par(mfrow = c(1, 2))
# plot distribution
par(mfrow = c(1, 2))
hist(HM_Sensory_Neuron_overlapped$Human_Score)
hist(HM_Sensory_Neuron_overlapped$Mouse_Score)
#  overlayed  bar plot (needs filtering to zoom in)
par(mfrow = c(1, 1))
require(ggplot2)
require(reshape2)
HM_Sensory_Neuron_overlapped <- HM_Sensory_Neuron_overlapped[order(HM_Sensory_Neuron_overlapped$Human_Score), ]
HM_Sensory_Neuron_overlapped_filtered <- HM_Sensory_Neuron_overlapped[301:400,]
HM_Sensory_Neuron_overlapped_filtered_m <- melt(HM_Sensory_Neuron_overlapped_filtered)
ggplot(HM_Sensory_Neuron_overlapped_filtered_m, aes(Name, value, fill = variable)) +
geom_bar(stat = "identity", position = "identity", alpha = 0.75) +
xlab("Gene Symbol") + ylab("Score")
# line plot
HM_Sensory_Neuron_overlapped_filtered$Name <- as.numeric(as.factor(HM_Sensory_Neuron_overlapped_filtered$Name))
HM_Sensory_Neuron_overlapped_filtered_m <- melt(HM_Sensory_Neuron_overlapped_filtered ,  id.vars = 'Name', variable.name = 'series')
ggplot(HM_Sensory_Neuron_overlapped_filtered_m, aes(Name, value)) +
geom_line(aes(colour = series))
# spearman rank correlation
HM_Sensory_Neuron_overlapped_overlapped$human_rank <- rank(HM_Sensory_Neuron_overlapped_overlapped$Human_Score)
# spearman rank correlation
HM_Sensory_Neuron_overlapped$human_rank <- rank(HM_Sensory_Neuron_overlapped$Human_Score)
HM_Sensory_Neuron_overlapped$mouse_rank <- rank(HM_Sensory_Neuron_overlapped$Mouse_Score)
cor.test(HM_Sensory_Neuron_overlapped$human_rank, HM_Sensory_Neuron_overlapped$mouse_rank, method= "spearman")
setwd("~/Work/PhD/Projects/Comput MM Pain/Computational Analysis/Ligand_Receptor/Data/Sensory_Neuron/Neuron/hmMA")
# load data (18 datasets)
GSE59739 <- read.csv("data/GSE59739_tpm_filtered_sorted.csv")
# set working directory
setwd("~/Work/PhD/Projects/Comput MM Pain/Computational Analysis/Ligand_Receptor/Data/Sensory_Neuron/Neuron/hmMA")
# load data (18 datasets)
GSE59739 <- read.csv("data/GSE59739_tpm_filtered_sorted.csv")
